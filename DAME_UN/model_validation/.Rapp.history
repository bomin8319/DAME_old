hi
stdExp = function(x, kappa){#
  exp(-x/kappa)#
}#
x = unique(data[,1])#
plot(data)#
lines(x, stdExp(x, summary(hi)$parameters[1]), col='red')
hi <- nls(corr~exp(-dist/kappa), data = data.frame(data), start = list(kappa=1))
hi <- nls(corr~exp(-dist/kappa), data = data.frame(data), start = list(kappa=20))
data.frame(data)
nls(corr~exp(-dist/kappa), data = data.frame(data), start = list(kappa=20))
grid = c()
for (i in 1:10) {#
	for (j in 1:10) {#
		grid = c(grid, abs(i-j))#
	}#
}
grid
grid2 = unique(grid)
plot(grid2, Exponential(grid2, 20), type='l', lwd = 2, col='red', ylim=c(0,1))
points(grid, corr)
points(grid, data[,2])
points(grid2, data[,2])
points(data[,1], data[,2])
beta
tau
tau_p
P=10#
beta = matrix(NA, Time, P)#
 for (p in 1:P) {#
 	beta[, p] = rmvnorm(1, rep(0,Time), tau_p[p] * covmat[[1]])#
 	}
beta
P=10#
beta = matrix(NA, Time, P)#
 for (p in 1:P) {#
 	beta[, p] = rmvnorm(1, rep(0,Time), tau_p[1] * covmat[[1]])#
 	}
beta
library(fields)#
data = matrix(NA, nrow=0, ncol=2)#
for (i in 2:10) {#
	for (j in 1:(i-1)) {#
		corr = cor(beta[i,], beta[j,])#
		data= rbind(data, c(abs(i-j), corr))#
	}#
}#
#
colnames(data) = c("dist", "corr")
data
hi <- nls(corr~exp(-dist/kappa), data = data.frame(data), start = list(kappa=20))
hi
hi <- nls(corr~exp(-dist^2/kappa^2), data = data.frame(data), start = list(kappa=20))
hi
plot(grid2, Exponential(grid2, 20), type='l', lwd = 2, col='red', ylim=c(0,1))
points(grid, data$corr)
points(grid, data[,2])
points(data[,1], data[,2])
P=1000#
beta = matrix(NA, Time, P)#
 for (p in 1:P) {#
 	beta[, p] = rmvnorm(1, rep(0,Time), tau_p[1] * covmat[[1]])#
 	}#
#
library(fields)#
data = matrix(NA, nrow=0, ncol=2)#
for (i in 2:10) {#
	for (j in 1:(i-1)) {#
		corr = cor(beta[i,], beta[j,])#
		data= rbind(data, c(abs(i-j), corr))#
	}#
}#
#
colnames(data) = c("dist", "corr")
data
beta
plot(grid2, Exponential(grid2, kappa[1]), type='l', lwd = 2, col='red', ylim=c(0,1))
points(data[,1], data[,2])
P=100#
beta = matrix(NA, Time, P)#
 for (p in 1:P) {#
 	beta[, p] = rmvnorm(1, rep(0,Time), tau_p[1] * covmat[[1]])#
 	}#
#
library(fields)#
data = matrix(NA, nrow=0, ncol=2)#
for (i in 2:10) {#
	for (j in 1:(i-1)) {#
		corr = cor(beta[i,], beta[j,])#
		data= rbind(data, c(abs(i-j), corr))#
	}#
}#
#
colnames(data) = c("dist", "corr")
plot(grid2, Exponential(grid2, kappa[1]), type='l', lwd = 2, col='red', ylim=c(0,1))
kappa
points(data[,1], data[,2])
hi <- nls(corr~exp(-dist/kappa), data = data.frame(data), start = list(kappa=20))
hi
plot(grid2, Exponential(grid2, kappa[1]), type='l', lwd = 2, col='red', ylim=c(0,1))
points(data[,1], data[,2])
lines(grid2, Exponential(grid2, 23.8), pch = 16, lwd = 2, col='green')
hi <- nls(corr~exp(-dist/kappa), data = data.frame(data), start = list(kappa=1))
hi
kappa = c(0.001, 0.001, 0.001)
Time = 10#
P = 2 #
# cov = matrix(NA, Time, Time)#
# for (i in 1:Time) {#
	# for (j in 1:Time) {#
		# cov[i,j] = exp(-(i - j)^2 / kappa^2) # used Squared Exponential#
		# }#
	# }	#
covmat = list()#
for (k in 1:3){#
	covmat[[k]] = matrix(NA, Time, Time)#
	for (i in 1:Time) {#
	for (j in 1:Time) {#
		covmat[[k]][i,j] = exp(-abs(i - j) / kappa[k]) # used Exponential#
		}#
	}		#
}#
#
a = 1/2; b = 1/2#
a_beta = 1/2; a_d = 1/2; #
b_beta = 1/2; b_d = 1/2;#
# s2 = 1 / rgamma(1, a, b)#
#
R = 2#
# tau_p = c()#
 # for (p in 1:P) {#
 	# tau_p[p] =  1 / rgamma(1, a_beta, a_beta)#
 	# }#
# tau_r = c()#
# for (r in 1:R) {#
	# tau_r[r]= 1 / rgamma(1, a_d, b_d)#
	# }#
s2 = 1#
tau_p = rep(1, P)#
tau_r = rep(1, R)#
#
beta = matrix(NA, Time, P)#
 for (p in 1:P) {#
 	beta[, p] = rmvnorm(1, rep(0,Time), tau_p[p] * covmat[[1]])#
 	}#
#
d  = matrix(NA, Time, R)#
for (r in 1:R) {#
	d[, r] = rmvnorm(1, rep(0,Time), tau_r[r] * covmat[[2]])#
	}#
#
N = 50#
ijcomb = matrix(NA, nrow=choose(N, 2), ncol=2)	#
	iter = 1#
	for (i in 2:N) { #
		for (j in 1:(i - 1)) {#
			ijcomb[iter, ] = c(i, j)#
			iter = iter + 1#
		}#
	}
covmat
P=100#
beta = matrix(NA, Time, P)#
 for (p in 1:P) {#
 	beta[, p] = rmvnorm(1, rep(0,Time), tau_p[1] * covmat[[1]])#
 	}#
#
library(fields)#
data = matrix(NA, nrow=0, ncol=2)#
for (i in 2:10) {#
	for (j in 1:(i-1)) {#
		corr = cor(beta[i,], beta[j,])#
		data= rbind(data, c(abs(i-j), corr))#
	}#
}
colnames(data) = c("dist", "corr")
plot(grid2, Exponential(grid2, kappa[1]), type='l', lwd = 2, col='red', ylim=c(0,1))
points(data[,1], data[,2])
hi <- nls(corr~exp(-dist/kappa), data = data.frame(data), start = list(kappa=20))
hi
lines(grid2, Exponential(grid2, 0.3114), pch = 16, lwd = 2, col='green')
load('~/Desktop/results/UN_full.RData')
names(UN)
UN$D
names(UN)
hi = lapply(1:32, function(t) {stat.desc(UN$theta[[t]])[c(9, 12), ]})
library(pastecs)
hi = lapply(1:32, function(t) {stat.desc(UN$theta[[t]])[c(9, 12), ]})
hi
hi2 = lapply(1:32, function(t) {stat.desc(UN$UDU[[t]])[c(9, 12)]})
hi2
hi2 = lapply(1:32, function(t) {stat.desc(UN$UDU[[t]])[c(9, 12),]})
hi2
summaries = list(theta = hi, UDU = hi2)
summaries[[1]]
summaries$theta
save(summaries, file = "thetaUDUsummary.RData")
summaries$theta[[32]]
summaries$UDU[[32]]
load('~/Desktop/results/UN_full2.RData')
hi = lapply(1:32, function(t) {stat.desc(UN2$theta[[t]])[c(9, 12), ]})
hi2 = lapply(1:32, function(t) {stat.desc(UN2$UDU[[t]])[c(9, 12),]})
hi2
hi = lapply(1:32, function(t) {stat.desc(UN2$theta[[t]])[c(9, 12), ]})
hi
plot(UN$s2, type = 'l')
lines(UN2$s2, col = 'red')
plot(UN2$s2, type = 'l')
matplot(cbind(UN$s2, UN2$s2))
matplot(cbind(UN$s2, UN2$s2), type = 'l')
load('~/Desktop/results/UN_full3.RData')matplot(cbind(UN$s2, UN2$s2), type = 'l')
load('~/Desktop/results/UN_full3.RData')
matplot(cbind(UN$s2, UN2$s2, UN3$s2), type = 'l')
#full#
library(devtools)#
setwd('/Users/bomin8319/Desktop/DLFM/pkg2/R')#
load_all()#
load("/Users/bomin8319/Desktop/DLFM/UNfit/UNdatafull.RData")#
attach(UNdatafull)#
library(FastGP)#
library(mvtnorm)#
library(fields)#
library(reshape)#
library(MCMCpack)#
library(expm)#
library(igraph)#
library(DLFM2)#
library(coda)#
library(ggplot2)#
library(gridExtra)#
ggplotColours <- function(n = 6, h = c(0, 360) + 15){#
  if ((diff(h) %% 360) < 1) h[2] <- h[2] - 360/n#
  hcl(h = (seq(h[1], h[2], length = n)), c = 100, l = 65)#
}#
number_ticks <- function(n) {function(limits) pretty(limits, n)}#
for(tp in 1:32){#
	diag(X[tp,,,2]) = 0#
}#
load("/Users/bomin8319/Desktop/DLFM/UNfit/clang.RData")#
rownames(clang)[36] = "GFR"#
#
reduced <-which(dimnames(Y)[[2]] %in% c(intersect(rownames(clang), rownames(Y[1,,])), "IRQ", "GRG"))#
Y = Y[, reduced, reduced]#
X = X[, reduced, reduced, 1:5]#
#
clang2 = matrix(NA, 74, 74)#
rownames(clang2) = colnames(clang2)=rownames(Y[1,,])#
diag(clang) = 1#
Xnew = array(NA, dim = c(32,74,74,6))#
dimnames(Xnew)[1] =dimnames(X)[1]#
dimnames(Xnew)[2] =dimnames(X)[2]#
dimnames(Xnew)[3] =dimnames(X)[3]#
dimnames(Xnew)[[4]] = c("intercept", "log(distance)", "polity", "alliance", "Trade/GDP", "language")#
Xnew[,,,1:5] = X[,,,1:5]#
order = rep(NA, 74)#
for (i in 1:74){#
  if (rownames(Y[1,,])[i] %in% rownames(clang) ) {#
    order[i] = which(rownames(clang)==rownames(Y[1,,])[i])#
  }#
}#
order2 = order[!is.na(order)]#
clang2[-c(72, 29), -c(72, 29)] = clang[order2,order2]#
clang2[29, ] = clang2[31,]#
clang2[,29] = clang2[,31]#
clang2[72,] = 0#
clang2[,72]  =0#
diag(clang2)= 1#
#
# 74 country version#
# not existing countries -> all missing values imputed using model (biased)#
avail1 = matrix(1, 32, 74)#
avail1[1:8, c(71, 36)] =0 #North and South Korea did not joined UN voting until 1990#
avail1[1:10, 72] = 0 #GRG no voted until 1992#
avail1[1:9, 73] = 0 #RUS X variables not existed until 1991#
avail1[1:9, 74] = 0 #UKR not existed until 1991#
avail1[13:21, 29] = 0 #IRQ under sanction#
for (t in 1:32){#
	Xnew[t,,,6] = clang2#
}#
#
Time = 32#
N = 74#
Degrees = vapply(1:Time, function(tp) {rowSums(Y[tp,,], na.rm = TRUE)}, rep(0, N))#
corr = vapply(1:31, function(l) {cor(Degrees[1:(N*(Time - l))], Degrees[(1 + N*l):(N*Time)], use = "complete")}, 0)#
plot(corr, type = 'l')
UN4 = DLFM_MH(Y[1:32,,], Xnew[1:32,,,1:6], RE = c("multiplicative"), R = 2, avail = avail1, burn = 1000, nscan = 5000, odens = 10, plot = FALSE)
names(UN4)
plot(UN$s2, type = 'l')
plot(UN4$s2, type = 'l')
save(UN4, file = "UN_full4.RData")
load('~/Desktop/DLFM/UN_full.RData')#
load('~/Desktop/DLFM/UN_full2.RData')#
load('~/Desktop/DLFM/UN_full3.RData')
head(UN4$theta[[1]])
## side by side #
hi = factor(1983:2014)#
hello = list()#
hello2 = list()#
hello3 = list()#
hello4 = list()#
hellonew = list()#
mean = list()#
countrynames = sort(rownames(UN$U[[32]]))#
#
n2 = 1#
for 	(n in 1:74){#
	hello[[n]] = matrix(NA, nrow = 0, ncol = 3)#
	mean[[n]] = matrix(NA, nrow = 0, ncol = 3)#
	for (d in 1:32){#
	hello[[n]]  = rbind(hello[[n]], cbind(UN$Degree[[d]][,n2], rep(hi[d], length(UN$Degree[[d]][,n2])), rep("DAME", length(UN$Degree[[d]][,n2]))))#
	diag(Y[d,, ])= 0#
	Y[d, which(avail1[d,]==0), ] = 0#
	Y[d, , which(avail1[d,]==0)] = 0#
	mean[[n]] = rbind(mean[[n]], c(rowSums(Y[d,,], na.rm=TRUE)[n2], hi[d], "DAME"))#
}#
colnames(hello[[n]]) = c("Degree", "Year", "Model")#
hello[[n]] = as.data.frame(hello[[n]])#
hello[[n]]$Year = factor(sort(as.numeric(hello[[n]]$Year)), labels = c(1983:2014))#
#
	hello2[[n]] = matrix(NA, nrow = 0, ncol = 3)#
	for (d in 1:32){#
	hello2[[n]]  = rbind(hello2[[n]], cbind(UN2$Degree[[d]][,n2], rep(hi[d], length(UN2$Degree[[d]][,n2])), rep("AE", length(UN2$Degree[[d]][,n2]))))#
	}#
colnames(hello2[[n]]) = c("Degree", "Year", "Model")#
hello2[[n]] = as.data.frame(hello2[[n]])#
hello2[[n]]$Year = factor(sort(as.numeric(hello2[[n]]$Year)), labels = c(1983:2014))#
#
hello3[[n]] = matrix(NA, nrow = 0, ncol = 3)#
	for (d in 1:32){#
	hello3[[n]]  = rbind(hello3[[n]], cbind(UN3$Degree[[d]][,n2], rep(hi[d], length(UN3$Degree[[d]][,n2])), rep("NO", length(UN3$Degree[[d]][,n2]))))#
	}#
colnames(hello3[[n]]) = c("Degree", "Year", "Model")#
hello3[[n]] = as.data.frame(hello3[[n]])#
hello3[[n]]$Year = factor(sort(as.numeric(hello3[[n]]$Year)), labels = c(1983:2014))#
#
hello4[[n]] = matrix(NA, nrow = 0, ncol = 3)#
	for (d in 1:32){#
	hello4[[n]]  = rbind(hello4[[n]], cbind(UN4$Degree[[d]][,n2], rep(hi[d], length(UN4$Degree[[d]][,n2])), rep("ME", length(UN4$Degree[[d]][,n2]))))#
	}#
colnames(hello4[[n]]) = c("Degree", "Year", "Model")#
hello4[[n]] = as.data.frame(hello4[[n]])#
hello4[[n]]$Year = factor(sort(as.numeric(hello4[[n]]$Year)), labels = c(1983:2014))#
hellonew[[n]] = as.data.frame(rbind(hello[[n]], hello4[[n]], hello2[[n]], hello3[[n]]))#
colnames(mean[[n]]) =  c("Degree", "Year", "Model")#
mean[[n]] = as.data.frame(mean[[n]])#
n2 = n2 + 1#
}#
#
countryname = (rownames(UN$U[[32]]))#
countryname2 = (rownames(UN$U[[32]]))#
#
setwd('/Users/bomin8319/Desktop/results')#
countrynames = ggplotColours(4)#
p10 = list()#
n2 = 1#
for (n in 1:74){#
	hellonew[[n]]$Degree = as.numeric(as.character(hellonew[[n]]$Degree))#
	mean[[n]]$Degree = as.numeric(as.character(mean[[n]]$Degree))#
	mean[[n]]$Year = hi#
p10[[n]] = ggplot(hellonew[[n]], aes(x = Year, y = Degree, color= Model, fill =Model)) + geom_boxplot(outlier.size = 0.5, position = position_dodge()) + theme_minimal() +scale_fill_manual(values = alpha(countrynames,0.5), name = countryname[n])+scale_color_manual(values = countrynames,name = countryname[n]) + geom_line(data = mean[[n]], color = "blue", size = 0.2, group = 1)+geom_point(data = mean[[n]], color = "blue", size =2, group = 1)+guides(colour = guide_legend(override.aes = list(shape = NA))) + theme(legend.title = element_blank())#
#annotate("text", 30, 10, size = 5, label = countryname2[n], colour = countrynames[n])#
n2 = n2 + 1#
#
mname = paste0(countryname2[n], n, ".png")#
print(p10[[n]])#
#ggsave(filename = mname, width = 12, height = 6)#
}
setwd('/Users/bomin8319/Desktop/model_validation')#
countrynames = ggplotColours(4)#
p10 = list()#
n2 = 1#
for (n in 1:74){#
	hellonew[[n]]$Degree = as.numeric(as.character(hellonew[[n]]$Degree))#
	mean[[n]]$Degree = as.numeric(as.character(mean[[n]]$Degree))#
	mean[[n]]$Year = hi#
p10[[n]] = ggplot(hellonew[[n]], aes(x = Year, y = Degree, color= Model, fill =Model)) + geom_boxplot(outlier.size = 0.5, position = position_dodge()) + theme_minimal() +scale_fill_manual(values = alpha(countrynames,0.5), name = countryname[n])+scale_color_manual(values = countrynames,name = countryname[n]) + geom_line(data = mean[[n]], color = "blue", size = 0.2, group = 1)+geom_point(data = mean[[n]], color = "blue", size =2, group = 1)+guides(colour = guide_legend(override.aes = list(shape = NA))) + theme(legend.title = element_blank())#
#annotate("text", 30, 10, size = 5, label = countryname2[n], colour = countrynames[n])#
n2 = n2 + 1#
#
mname = paste0(countryname2[n], n, ".png")#
print(p10[[n]])#
ggsave(filename = mname, width = 12, height = 6)#
}
#seconddegree#
hi = factor(1983:2014)#
hello = list()#
hello2 = list()#
hello3 = list()#
hello4 = list()#
hellonew = list()#
mean = list()#
countrynames = sort(rownames(UN$U[[32]]))#
#
n2 = 1#
for 	(n in 1:74){#
	hello[[n]] = matrix(NA, nrow = 0, ncol = 3)#
	mean[[n]] = matrix(NA, nrow = 0, ncol = 3)#
	for (d in 1:32){#
	hello[[n]]  = rbind(hello[[n]], cbind(UN$secondDegree[[d]][,n2], rep(hi[d], length(UN$secondDegree[[d]][,n2])), rep("DAME", length(UN$secondDegree[[d]][,n2]))))#
	diag(Y[d,, ])= 0#
	Y[d, which(avail1[d,]==0), ] = 0#
	Y[d, , which(avail1[d,]==0)] = 0#
	mean[[n]] = rbind(mean[[n]], c(rowSums(Y[d,,] %*% Y[d,,], na.rm = TRUE)[n2], hi[d], "DAME"))#
}#
colnames(hello[[n]]) = c("SecondDegree", "Year", "Model")#
hello[[n]] = as.data.frame(hello[[n]])#
hello[[n]]$Year = factor(sort(as.numeric(hello[[n]]$Year)), labels = c(1983:2014))#
#
	hello2[[n]] = matrix(NA, nrow = 0, ncol = 3)#
	for (d in 1:32){#
	hello2[[n]]  = rbind(hello2[[n]], cbind(UN2$secondDegree[[d]][,n2], rep(hi[d], length(UN2$secondDegree[[d]][,n2])), rep("AE", length(UN2$secondDegree[[d]][,n2]))))#
	}#
colnames(hello2[[n]]) = c("SecondDegree", "Year", "Model")#
hello2[[n]] = as.data.frame(hello2[[n]])#
hello2[[n]]$Year = factor(sort(as.numeric(hello2[[n]]$Year)), labels = c(1983:2014))#
#
hello3[[n]] = matrix(NA, nrow = 0, ncol = 3)#
	for (d in 1:32){#
	hello3[[n]]  = rbind(hello3[[n]], cbind(UN3$secondDegree[[d]][,n2], rep(hi[d], length(UN3$secondDegree[[d]][,n2])), rep("NO", length(UN3$secondDegree[[d]][,n2]))))#
	}#
colnames(hello3[[n]]) = c("SecondDegree", "Year", "Model")#
hello3[[n]] = as.data.frame(hello3[[n]])#
hello3[[n]]$Year = factor(sort(as.numeric(hello3[[n]]$Year)), labels = c(1983:2014))#
#
hello4[[n]] = matrix(NA, nrow = 0, ncol = 3)#
	for (d in 1:32){#
	hello4[[n]]  = rbind(hello4[[n]], cbind(UN4$secondDegree[[d]][,n2], rep(hi[d], length(UN4$secondDegree[[d]][,n2])), rep("ME", length(UN4$secondDegree[[d]][,n2]))))#
	}#
colnames(hello4[[n]]) = c("SecondDegree", "Year", "Model")#
hello4[[n]] = as.data.frame(hello4[[n]])#
hello4[[n]]$Year = factor(sort(as.numeric(hello4[[n]]$Year)), labels = c(1983:2014))#
#
hellonew[[n]] = as.data.frame(rbind(hello[[n]],hello4[[n]], hello2[[n]], hello3[[n]]))#
colnames(mean[[n]]) =  c("SecondDegree", "Year", "Model")#
mean[[n]] = as.data.frame(mean[[n]])#
n2 = n2 + 1#
}#
#
countryname = (rownames(UN$U[[32]]))#
countryname2 = (rownames(UN$U[[32]]))#
ggplotColours <- function(n = 6, h = c(0, 360) + 15){#
  if ((diff(h) %% 360) < 1) h[2] <- h[2] - 360/n#
  hcl(h = (seq(h[1], h[2], length = n)), c = 100, l = 65)#
}#
countrynames = ggplotColours(4)#
p10 = list()#
n2 = 1#
for (n in 1:74){#
	hellonew[[n]]$SecondDegree = as.numeric(as.character(hellonew[[n]]$SecondDegree))#
	mean[[n]]$SecondDegree = as.numeric(as.character(mean[[n]]$SecondDegree))#
	mean[[n]]$Year = hi#
p10[[n]] = ggplot(hellonew[[n]], aes(x = Year, y = SecondDegree, color= Model, fill =Model)) + geom_boxplot(outlier.size = 0.5, position = position_dodge()) + theme_minimal() +scale_fill_manual(values = alpha(countrynames,0.5), name = countryname[n])+scale_color_manual(values = countrynames,name = countryname[n]) + geom_line(data = mean[[n]], color = "blue", size = 0.2, group = 1)+geom_point(data = mean[[n]], color = "blue", size =2, group = 1)+guides(colour = guide_legend(override.aes = list(shape = NA))) + theme(legend.title = element_blank())#
#
#annotate("text", 30, 10, size = 5, label = countryname2[n], colour = countrynames[n])#
n2 = n2 + 1#
#
mname = paste0(countryname2[n], n, "second.png")#
print(p10[[n]])#
ggsave(filename = mname, width = 12, height = 6)#
}
#thirddegree#
hi = factor(1983:2014)#
hello = list()#
hello2 = list()#
hello3 = list()#
hello4 = list()#
hellonew = list()#
mean = list()#
countrynames = sort(rownames(UN$U[[32]]))#
#
n2 = 1#
for 	(n in 1:74){#
	hello[[n]] = matrix(NA, nrow = 0, ncol = 3)#
	mean[[n]] = matrix(NA, nrow = 0, ncol = 3)#
	for (d in 1:32){#
	hello[[n]]  = rbind(hello[[n]], cbind(UN$thirdDegree[[d]][,n2], rep(hi[d], length(UN$thirdDegree[[d]][,n2])), rep("DAME", length(UN$thirdDegree[[d]][,n2]))))#
	diag(Y[d,, ])= 0#
	Y[d, which(avail1[d,]==0), ] = 0#
	Y[d, , which(avail1[d,]==0)] = 0#
	mean[[n]] = rbind(mean[[n]], c(rowSums(Y[d,,] %*% Y[d,,] %*% Y[d,,], na.rm = TRUE)[n2], hi[d], "DAME"))#
}#
colnames(hello[[n]]) = c("ThirdDegree", "Year", "Model")#
hello[[n]] = as.data.frame(hello[[n]])#
hello[[n]]$Year = factor(sort(as.numeric(hello[[n]]$Year)), labels = c(1983:2014))#
#
	hello2[[n]] = matrix(NA, nrow = 0, ncol = 3)#
	for (d in 1:32){#
	hello2[[n]]  = rbind(hello2[[n]], cbind(UN2$thirdDegree[[d]][,n2], rep(hi[d], length(UN2$thirdDegree[[d]][,n2])), rep("AE", length(UN2$thirdDegree[[d]][,n2]))))#
	}#
colnames(hello2[[n]]) = c("ThirdDegree", "Year", "Model")#
hello2[[n]] = as.data.frame(hello2[[n]])#
hello2[[n]]$Year = factor(sort(as.numeric(hello2[[n]]$Year)), labels = c(1983:2014))#
#
hello3[[n]] = matrix(NA, nrow = 0, ncol = 3)#
	for (d in 1:32){#
	hello3[[n]]  = rbind(hello3[[n]], cbind(UN3$thirdDegree[[d]][,n2], rep(hi[d], length(UN3$thirdDegree[[d]][,n2])), rep("NO", length(UN3$thirdDegree[[d]][,n2]))))#
	}#
colnames(hello3[[n]]) = c("ThirdDegree", "Year", "Model")#
hello3[[n]] = as.data.frame(hello3[[n]])#
hello3[[n]]$Year = factor(sort(as.numeric(hello3[[n]]$Year)), labels = c(1983:2014))#
hello4[[n]] = matrix(NA, nrow = 0, ncol = 3)#
	for (d in 1:32){#
	hello4[[n]]  = rbind(hello4[[n]], cbind(UN4$thirdDegree[[d]][,n2], rep(hi[d], length(UN4$thirdDegree[[d]][,n2])), rep("ME", length(UN4$thirdDegree[[d]][,n2]))))#
	}#
colnames(hello4[[n]]) = c("ThirdDegree", "Year", "Model")#
hello4[[n]] = as.data.frame(hello4[[n]])#
hello4[[n]]$Year = factor(sort(as.numeric(hello4[[n]]$Year)), labels = c(1983:2014))#
hellonew[[n]] = as.data.frame(rbind(hello[[n]], hello4[[n]], hello2[[n]], hello3[[n]]))#
colnames(mean[[n]]) =  c("ThirdDegree", "Year", "Model")#
mean[[n]] = as.data.frame(mean[[n]])#
n2 = n2 + 1#
}#
#
countryname = (rownames(UN$U[[32]]))#
countryname2 = (rownames(UN$U[[32]]))#
ggplotColours <- function(n = 6, h = c(0, 360) + 15){#
  if ((diff(h) %% 360) < 1) h[2] <- h[2] - 360/n#
  hcl(h = (seq(h[1], h[2], length = n)), c = 100, l = 65)#
}#
countrynames = ggplotColours(4)#
p10 = list()#
n2 = 1#
for (n in 1:74){#
	hellonew[[n]]$ThirdDegree = as.numeric(as.character(hellonew[[n]]$ThirdDegree))#
	mean[[n]]$ThirdDegree = as.numeric(as.character(mean[[n]]$ThirdDegree))#
	mean[[n]]$Year = hi#
p10[[n]] = ggplot(hellonew[[n]], aes(x = Year, y = ThirdDegree, color= Model, fill =Model)) + geom_boxplot(outlier.size = 0.5, position = position_dodge()) + theme_minimal() +scale_fill_manual(values = alpha(countrynames,0.5), name = countryname[n])+scale_color_manual(values = countrynames,name = countryname[n]) +  geom_line(data = mean[[n]], color = "blue", size = 0.2, group = 1)+geom_point(data = mean[[n]], color = "blue", size =2, group = 1)+guides(colour = guide_legend(override.aes = list(shape = NA))) + theme(legend.title = element_blank())#
#
#annotate("text", 30, 10, size = 5, label = countryname2[n], colour = countrynames[n])#
n2 = n2 + 1#
#
mname = paste0(countryname2[n], n, "third.png")#
print(p10[[n]])#
ggsave(filename = mname, width = 12, height = 6)#
}
boxplot(UN$s2)
sigma = melt(cbind(UN$s2, UN4$s2, UN2$s2, UN3$s2))
head(sigma)
boxplot(sigma)
bplots(cbind(UN$s2, UN4$s2, UN2$s2, UN3$s2))
bplot(cbind(UN$s2, UN4$s2, UN2$s2, UN3$s2))
?bplot
bplot(cbind(UN$s2, UN4$s2, UN2$s2, UN3$s2), names = c("AME", "ME", "AE", "NO"))
par(mfrow = c(1,2))#
bplot(cbind(UN$s2, UN4$s2, UN2$s2, UN3$s2), names = c("AME", "ME", "AE", "NO"))#
bplot(cbind(UN$s2, UN4$s2), names = c("AME", "ME", "AE"))
par(mfrow = c(1,2))#
bplot(cbind(UN$s2, UN4$s2, UN2$s2, UN3$s2), names = c("AME", "ME", "AE", "NO"))#
bplot(cbind(UN$s2, UN4$s2), names = c("AME", "ME"))
## side by side #
hi = factor(1983:2014)#
hello = list()#
hello2 = list()#
hello3 = list()#
hello4 = list()#
hellonew = list()#
mean = list()#
countrynames = sort(rownames(UN$U[[32]]))#
#
n2 = 1#
for 	(n in 1:74){#
	hello[[n]] = matrix(NA, nrow = 0, ncol = 3)#
	mean[[n]] = matrix(NA, nrow = 0, ncol = 3)#
	for (d in 1:32){#
	hello[[n]]  = rbind(hello[[n]], cbind(UN$Degree[[d]][,n2], rep(hi[d], length(UN$Degree[[d]][,n2])), rep("DAME", length(UN$Degree[[d]][,n2]))))#
	diag(Y[d,, ])= 0#
	Y[d, which(avail1[d,]==0), ] = 0#
	Y[d, , which(avail1[d,]==0)] = 0#
	mean[[n]] = rbind(mean[[n]], c(rowSums(Y[d,,], na.rm=TRUE)[n2], hi[d], "DAME"))#
}#
colnames(hello[[n]]) = c("Degree", "Year", "Model")#
hello[[n]] = as.data.frame(hello[[n]])#
hello[[n]]$Year = factor(sort(as.numeric(hello[[n]]$Year)), labels = c(1983:2014))#
#
	hello2[[n]] = matrix(NA, nrow = 0, ncol = 3)#
	for (d in 1:32){#
	hello2[[n]]  = rbind(hello2[[n]], cbind(UN2$Degree[[d]][,n2], rep(hi[d], length(UN2$Degree[[d]][,n2])), rep("AE", length(UN2$Degree[[d]][,n2]))))#
	}#
colnames(hello2[[n]]) = c("Degree", "Year", "Model")#
hello2[[n]] = as.data.frame(hello2[[n]])#
hello2[[n]]$Year = factor(sort(as.numeric(hello2[[n]]$Year)), labels = c(1983:2014))#
#
hello3[[n]] = matrix(NA, nrow = 0, ncol = 3)#
	for (d in 1:32){#
	hello3[[n]]  = rbind(hello3[[n]], cbind(UN3$Degree[[d]][,n2], rep(hi[d], length(UN3$Degree[[d]][,n2])), rep("NO", length(UN3$Degree[[d]][,n2]))))#
	}#
colnames(hello3[[n]]) = c("Degree", "Year", "Model")#
hello3[[n]] = as.data.frame(hello3[[n]])#
hello3[[n]]$Year = factor(sort(as.numeric(hello3[[n]]$Year)), labels = c(1983:2014))#
#
hello4[[n]] = matrix(NA, nrow = 0, ncol = 3)#
	for (d in 1:32){#
	hello4[[n]]  = rbind(hello4[[n]], cbind(UN4$Degree[[d]][,n2], rep(hi[d], length(UN4$Degree[[d]][,n2])), rep("ME", length(UN4$Degree[[d]][,n2]))))#
	}#
colnames(hello4[[n]]) = c("Degree", "Year", "Model")#
hello4[[n]] = as.data.frame(hello4[[n]])#
hello4[[n]]$Year = factor(sort(as.numeric(hello4[[n]]$Year)), labels = c(1983:2014))#
#hellonew[[n]] = as.data.frame(rbind(hello[[n]], hello4[[n]], hello2[[n]], hello3[[n]]))#
hellonew[[n]] = as.data.frame(rbind(hello[[n]], hello4[[n]]))#
colnames(mean[[n]]) =  c("Degree", "Year", "Model")#
mean[[n]] = as.data.frame(mean[[n]])#
n2 = n2 + 1#
}#
#
countryname = (rownames(UN$U[[32]]))#
countryname2 = (rownames(UN$U[[32]]))#
#
setwd('/Users/bomin8319/Desktop/model_validation')#
countrynames = ggplotColours(4)#
p10 = list()#
n2 = 1#
for (n in 1:74){#
	hellonew[[n]]$Degree = as.numeric(as.character(hellonew[[n]]$Degree))#
	mean[[n]]$Degree = as.numeric(as.character(mean[[n]]$Degree))#
	mean[[n]]$Year = hi#
p10[[n]] = ggplot(hellonew[[n]], aes(x = Year, y = Degree, color= Model, fill =Model)) + geom_boxplot(outlier.size = 0.5, position = position_dodge()) + theme_minimal() +scale_fill_manual(values = alpha(countrynames,0.5), name = countryname[n])+scale_color_manual(values = countrynames,name = countryname[n]) + geom_line(data = mean[[n]], color = "blue", size = 0.2, group = 1)+geom_point(data = mean[[n]], color = "blue", size =2, group = 1)+guides(colour = guide_legend(override.aes = list(shape = NA))) + theme(legend.title = element_blank())#
#annotate("text", 30, 10, size = 5, label = countryname2[n], colour = countrynames[n])#
n2 = n2 + 1#
#
mname = paste0(countryname2[n], n, ".png")#
print(p10[[n]])#
#ggsave(filename = mname, width = 12, height = 6)#
}
par(mfrow = c(1,2))#
bplot(cbind(UN$s2, UN4$s2, UN2$s2, UN3$s2), names = c("AME", "ME", "AE", "NO"))#
bplot(cbind(UN$s2, UN4$s2), names = c("AME", "ME"))
par(mfrow = c(2,2))#
bplot(cbind(UN$s2, UN4$s2, UN2$s2, UN3$s2), names = c("AME", "ME", "AE", "NO"))#
bplot(cbind(UN$s2, UN4$s2), names = c("AME", "ME"))
names(UN)
head(UN$Degree[[1]])
bplot(cbind(UN$Degree[[1]][,1], UN5$Degree[[1]][,1]), names = c("AME", "ME"))
par(mfrow = c(2,2))#
bplot(cbind(UN$s2, UN4$s2, UN2$s2, UN3$s2), names = c("AME", "ME", "AE", "NO"))#
bplot(cbind(UN$s2, UN4$s2), names = c("AME", "ME"))#
bplot(cbind(UN$Degree[[1]][,1], UN4$Degree[[1]][,1]), names = c("AME", "ME"))#
bplot(cbind(UN2$Degree[[1]][,1], UN3$Degree[[1]][,1]), names = c("AE", "NO"))
bplot(cbind(UN$Degree[[32]][,1], UN4$Degree[[32]][,1]), names = c("AME", "ME"))#
bplot(cbind(UN2$Degree[[32]][,1], UN3$Degree[[32]][,1]), names = c("AE", "NO"))
summary(UN2$Degree[[32]][,1])
summary(UN3$Degree[[32]][,1])
summary(UN3$Degree[[32]][,1])[5]-summary(UN3$Degree[[32]][,1])[2]
summary(UN2$Degree[[32]][,1])[5]-summary(UN2$Degree[[32]][,1])[2]
summary(UN2$Degree[[2]][,1])[5]-summary(UN2$Degree[[2]][,1])[2]
summary(UN2$Degree[[2]][,1])[5]-summary(UN2$Degree[[2]][,1])[2]
summary(UN3$Degree[[2]][,1])[5]-summary(UN3$Degree[[2]][,1])[2]
par(mfrow = c(2,2))#
bplot(cbind(UN$s2, UN4$s2, UN2$s2, UN3$s2), names = c("AME", "ME", "AE", "NO"))#
bplot(cbind(UN$s2, UN4$s2), names = c("AME", "ME"))#
bplot(cbind(UN$Degree[[32]][,1], UN4$Degree[[32]][,1]), names = c("AME", "ME"))#
bplot(cbind(UN2$Degree[[32]][,1], UN3$Degree[[32]][,1]), names = c("AE", "NO"))
par(mfrow = c(2,2))#
bplot(cbind(UN$s2, UN4$s2, UN2$s2, UN3$s2), names = c("AME", "ME", "AE", "NO"), ylab = 'sigma^2')#
bplot(cbind(UN$s2, UN4$s2), names = c("AME", "ME"), ylab = 'sigma^2')#
bplot(cbind(UN$Degree[[32]][,1], UN4$Degree[[32]][,1]), names = c("AME", "ME"))#
bplot(cbind(UN2$Degree[[32]][,1], UN3$Degree[[32]][,1]), names = c("AE", "NO"))
par(mfrow = c(2,2))#
bplot(cbind(UN$s2, UN4$s2, UN2$s2, UN3$s2), names = c("AME", "ME", "AE", "NO"), ylab = 'sigma^2')#
bplot(cbind(UN$s2, UN4$s2), names = c("AME", "ME"), ylab = 'sigma^2')#
bplot(cbind(UN$Degree[[32]][,1], UN4$Degree[[32]][,1]), names = c("AME", "ME"), main = "Example of Degree[AFG,32]")#
bplot(cbind(UN2$Degree[[32]][,1], UN3$Degree[[32]][,1]), names = c("AE", "NO"), main = "Example of Degree[AFG,32]")
load('~/Desktop/thetaUDUsummary.RData')
names(summaries)
summaries$theta[[32]]
summaries$UDU[[32]]
par(mfrow = c(2,2))#
bplot(cbind(UN$s2, UN4$s2, UN2$s2, UN3$s2), names = c("AME", "ME", "AE", "NO"))#
bplot(cbind(UN$s2, UN4$s2), names = c("AME", "ME"))#
bplot(cbind(UN$Degree[[32]][,10], UN4$Degree[[32]][,10]), names = c("AME", "ME"))#
bplot(cbind(UN2$Degree[[32]][,10], UN3$Degree[[32]][,10]), names = c("AE", "NO"))
rownames(UN$Degree[[32]])
names(UN$Degree[[32]])
colnames(UN$Degree[[32]])
par(mfrow = c(2,2))#
bplot(cbind(UN$s2, UN4$s2, UN2$s2, UN3$s2), names = c("AME", "ME", "AE", "NO"))#
bplot(cbind(UN$s2, UN4$s2), names = c("AME", "ME"))#
bplot(cbind(UN$Degree[[32]][,68], UN4$Degree[[32]][,68]), names = c("AME", "ME"))#
bplot(cbind(UN2$Degree[[32]][,68], UN3$Degree[[32]][,68]), names = c("AE", "NO"))
par(mfrow = c(2,2))#
bplot(cbind(UN$s2, UN4$s2, UN2$s2, UN3$s2), names = c("AME", "ME", "AE", "NO"), ylab = 'sigma^2')#
bplot(cbind(UN$s2, UN4$s2), names = c("AME", "ME"), ylab = 'sigma^2')#
bplot(cbind(UN$Degree[[32]][,31], UN4$Degree[[32]][,31]), names = c("AME", "ME"), main = "Example of Degree[ISR,32]")#
bplot(cbind(UN2$Degree[[32]][,31], UN3$Degree[[32]][,31]), names = c("AE", "NO"), main = "Example of Degree[ISR,32]")
summary(unlist(lapply(summaries$theta, function(x){x[2,]})))
lapply(summaries$theta, function(x){x[2,]})
unlist(lapply(summaries$theta, function(x){x[2,]})))
unlist(lapply(summaries$theta, function(x){x[2,]}))
lapply(summaries$theta, function(x){x[2,]})
max(unlist(lapply(summaries$theta, function(x){x[2,]}))))
max(unlist(lapply(summaries$theta, function(x){x[2,]})))
summary(unlist(lapply(summaries$theta, function(x){x[1,]})))
summaries$theta[[32]]
summary(unlist(lapply(summaries$UDU, function(x){x[1,]})))
summary(unlist(lapply(summaries$UDU, function(x){x[2,]})))
summaries$UDU[[32]]
summary(unlist(lapply(summaries$theta, function(x){x[2,]})))
summary(unlist(lapply(summaries$theta, function(x){abs(x[1,])})))
summary(unlist(lapply(summaries$UDU, function(x){abs(x[1,])})))
load('~/Desktop/DLFM/UN_full.RData')
names(UN_full)
names(UN)
lapply(UN$UDU, function(x){mean(x[upper.tri(x)])})
lapply(UN$UDU, function(x){mean(x[upper.tri(x)], na.rm = TRUE)})
sapply(UN$UDU, function(x){mean(x[upper.tri(x)], na.rm = TRUE)})
summary(sapply(UN$UDU, function(x){mean(x[upper.tri(x)], na.rm = TRUE)}))
summary(sapply(UN$UDU, function(x){mean(abs(x)[upper.tri(x)], na.rm = TRUE)}))
hist(sapply(UN$UDU, function(x){mean(abs(x)[upper.tri(x)], na.rm = TRUE)}))
names(UN)
sapply(UN$theta, function(x){colMeans(x, na.rm = TRUE)})
summary(c(sapply(UN$theta, function(x){colMeans(x, na.rm = TRUE)}))
)
summary(c(sapply(UN2$theta, function(x){colMeans(x, na.rm = TRUE)}))
)
summary(c(sapply(UN4$theta, function(x){colMeans(x, na.rm = TRUE)}))
)
summary(sapply(UN$UDU, function(x){mean(abs(x)[upper.tri(x)], na.rm = TRUE)}))
summary(sapply(UN4$UDU, function(x){mean(abs(x)[upper.tri(x)], na.rm = TRUE)}))
summary(c(sapply(UN$theta, function(x){colMeans(x, na.rm = TRUE)}))
)
summary(c(sapply(UN$theta, function(x){colMeans(abs(x), na.rm = TRUE)}))
)
summary(c(sapply(UN$theta, function(x){colMeans(abs(x), na.rm = TRUE)})))
summary(sapply(UN$UDU, function(x){mean(abs(x)[upper.tri(x)], na.rm = TRUE)}))
summary(sapply(UN4$UDU, function(x){mean(abs(x)[upper.tri(x)], na.rm = TRUE)}))
summary(c(sapply(UN2$theta, function(x){colMeans(abs(x), na.rm = TRUE)})))
summary(c(sapply(UN4$theta, function(x){colMeans(abs(x), na.rm = TRUE)})))
summary(sapply(UN2$UDU, function(x){mean(abs(x)[upper.tri(x)], na.rm = TRUE)}))
UN1 = Un
UN1 = UN
pp = list()#
for (tp in 1:32) {#
	diag(Y[tp,,]) = 0#
	Y[tp, which(avail1[tp, ]==0), ] = 0#
	Y[tp, , which(avail1[tp, ]==0)] = 0#
	data = sapply(1:500, function(r){table(floor(UN$Degree[[tp]][r,]))})#
	datamat = matrix(0, 500, 20)#
	colnames(datamat) = 0:19#
	for (i in 1:500) {#
		datamat[i, which(colnames(datamat) %in% names(data[[i]]))] = data[[i]] / sum(data[[i]])#
	}#
	datamat2 = data.frame(Proportion = c(datamat), Degree = factor(c(sapply(0:19, function(k){rep(k, 500)}))), Model = as.factor("DAME"))#
	data = sapply(1:500, function(r){table(floor(UN1$Degree[[tp]][r,]))})#
	datamat = matrix(0, 500, 20)#
	colnames(datamat) = 0:19#
	for (i in 1:500) {#
		datamat[i, which(colnames(datamat) %in% names(data[[i]]))] = data[[i]] / sum(data[[i]])#
	}#
	datamat2 = rbind(datamat2, data.frame(Proportion = c(datamat), Degree = factor(c(sapply(0:19, function(k){rep(k, 500)}))), Model = as.factor("AMEN")))#
	data = sapply(1:500, function(r){table(floor(UN3$Degree[[tp]][r,]))})#
	datamat = matrix(0, 500, 20)#
	colnames(datamat) = 0:19#
	for (i in 1:500) {#
		datamat[i, which(colnames(datamat) %in% names(data[[i]]))] = data[[i]] / sum(data[[i]])#
	}#
	datamat2 =  rbind(datamat2, data.frame(Proportion = c(datamat), Degree = factor(c(sapply(0:19, function(k){rep(k, 500)}))), Model = as.factor("DLSM"))	)#
	datamat2 = as.data.frame(datamat2)#
	observedpp = table(floor(rowSums(Y[tp,,]))) / sum(table(floor(rowSums(Y[tp,,]))))#
	pvec = rep(0, 20)#
	names(pvec) = 0:19#
	pvec[which(names(pvec) %in% names(observedpp))] = observedpp#
	observed = data.frame(Proportion = pvec, Degree = as.numeric(1:20))#
	pp[[tp]] = ggplot(datamat2, aes(x = Degree, y = Proportion, colour = as.factor(Model))) + geom_boxplot(outlier.size = 0.5, position = position_dodge()) + theme_bw() + geom_line(data = observed, colour = "grey60", size = 0.8)+scale_colour_discrete(name = "Model")+ggtitle(years[tp])#
}#
for (t in 1:32){#
mname = paste0(years[t], "threeDegree", ".png")#
print(pp[[t]])#
#ggsave(filename = mname, width = 10, height = 6)#
}
years = c(1983:2014)
pp = list()#
for (tp in 1:32) {#
	diag(Y[tp,,]) = 0#
	Y[tp, which(avail1[tp, ]==0), ] = 0#
	Y[tp, , which(avail1[tp, ]==0)] = 0#
	data = sapply(1:500, function(r){table(floor(UN$Degree[[tp]][r,]))})#
	datamat = matrix(0, 500, 20)#
	colnames(datamat) = 0:19#
	for (i in 1:500) {#
		datamat[i, which(colnames(datamat) %in% names(data[[i]]))] = data[[i]] / sum(data[[i]])#
	}#
	datamat2 = data.frame(Proportion = c(datamat), Degree = factor(c(sapply(0:19, function(k){rep(k, 500)}))), Model = as.factor("DAME"))#
	data = sapply(1:500, function(r){table(floor(UN1$Degree[[tp]][r,]))})#
	datamat = matrix(0, 500, 20)#
	colnames(datamat) = 0:19#
	for (i in 1:500) {#
		datamat[i, which(colnames(datamat) %in% names(data[[i]]))] = data[[i]] / sum(data[[i]])#
	}#
	datamat2 = rbind(datamat2, data.frame(Proportion = c(datamat), Degree = factor(c(sapply(0:19, function(k){rep(k, 500)}))), Model = as.factor("AMEN")))#
	data = sapply(1:500, function(r){table(floor(UN3$Degree[[tp]][r,]))})#
	datamat = matrix(0, 500, 20)#
	colnames(datamat) = 0:19#
	for (i in 1:500) {#
		datamat[i, which(colnames(datamat) %in% names(data[[i]]))] = data[[i]] / sum(data[[i]])#
	}#
	datamat2 =  rbind(datamat2, data.frame(Proportion = c(datamat), Degree = factor(c(sapply(0:19, function(k){rep(k, 500)}))), Model = as.factor("DLSM"))	)#
	datamat2 = as.data.frame(datamat2)#
	observedpp = table(floor(rowSums(Y[tp,,]))) / sum(table(floor(rowSums(Y[tp,,]))))#
	pvec = rep(0, 20)#
	names(pvec) = 0:19#
	pvec[which(names(pvec) %in% names(observedpp))] = observedpp#
	observed = data.frame(Proportion = pvec, Degree = as.numeric(1:20))#
	pp[[tp]] = ggplot(datamat2, aes(x = Degree, y = Proportion, colour = as.factor(Model))) + geom_boxplot(outlier.size = 0.5, position = position_dodge()) + theme_bw() + geom_line(data = observed, colour = "grey60", size = 0.8)+scale_colour_discrete(name = "Model")+ggtitle(years[tp])#
}#
for (t in 1:32){#
mname = paste0(years[t], "threeDegree", ".png")#
print(pp[[t]])#
#ggsave(filename = mname, width = 10, height = 6)#
}
tp
pp[[1]]
pp = list()#
for (tp in 1:32) {#
	diag(Y[tp,,]) = 0#
	Y[tp, which(avail1[tp, ]==0), ] = 0#
	Y[tp, , which(avail1[tp, ]==0)] = 0#
	data = sapply(1:500, function(r){table(floor(UN$Degree[[tp]][r,]))})#
	datamat = matrix(0, 500, 20)#
	colnames(datamat) = 0:19#
	for (i in 1:500) {#
		datamat[i, which(colnames(datamat) %in% names(data[[i]]))] = data[[i]] / sum(data[[i]])#
	}#
	datamat2 = data.frame(Proportion = c(datamat), Degree = factor(c(sapply(0:19, function(k){rep(k, 500)}))), Model = as.factor("DAME"))#
	data = sapply(1:500, function(r){table(floor(UN1$Degree[[tp]][r,]))})#
	datamat = matrix(0, 500, 20)#
	colnames(datamat) = 0:19#
	for (i in 1:500) {#
		datamat[i, which(colnames(datamat) %in% names(data[[i]]))] = data[[i]] / sum(data[[i]])#
	}#
	datamat2 = rbind(datamat2, data.frame(Proportion = c(datamat), Degree = factor(c(sapply(0:19, function(k){rep(k, 500)}))), Model = as.factor("AMEN")))#
	data = sapply(1:500, function(r){table(floor(UN3$Degree[[tp]][r,]))})#
	datamat = matrix(0, 500, 20)#
	colnames(datamat) = 0:19#
	for (i in 1:500) {#
		datamat[i, which(colnames(datamat) %in% names(data[[i]]))] = data[[i]] / sum(data[[i]])#
	}#
	datamat2 =  rbind(datamat2, data.frame(Proportion = c(datamat), Degree = factor(c(sapply(0:19, function(k){rep(k, 500)}))), Model = as.factor("DLSM"))	)#
	datamat2 = as.data.frame(datamat2)#
	observedpp = table(floor(rowSums(Y[tp,,]))) / sum(table(floor(rowSums(Y[tp,,]))))#
	pvec = rep(0, 20)#
	names(pvec) = 0:19#
	pvec[which(names(pvec) %in% names(observedpp))] = observedpp#
	observed = data.frame(Proportion = pvec, Degree = as.numeric(1:20))#
	pp[[tp]] = ggplot(datamat2, aes(x = Degree, y = Proportion, colour = as.factor(Model))) + geom_boxplot(outlier.size = 0.5, position = position_dodge()) + theme_bw() + geom_line(data = observed, colour = "grey60", size = 0.8)+scale_colour_discrete(name = "Model")+ggtitle(years[tp])#
}
i
tp
diag(Y[tp,,]) = 0#
	Y[tp, which(avail1[tp, ]==0), ] = 0#
	Y[tp, , which(avail1[tp, ]==0)] = 0#
	data = sapply(1:500, function(r){table(floor(UN$Degree[[tp]][r,]))})#
	datamat = matrix(0, 500, 20)#
	colnames(datamat) = 0:19#
	for (i in 1:500) {#
		datamat[i, which(colnames(datamat) %in% names(data[[i]]))] = data[[i]] / sum(data[[i]])#
	}#
	datamat2 = data.frame(Proportion = c(datamat), Degree = factor(c(sapply(0:19, function(k){rep(k, 500)}))), Model = as.factor("DAME"))#
	data = sapply(1:500, function(r){table(floor(UN1$Degree[[tp]][r,]))})#
	datamat = matrix(0, 500, 20)#
	colnames(datamat) = 0:19#
	for (i in 1:500) {#
		datamat[i, which(colnames(datamat) %in% names(data[[i]]))] = data[[i]] / sum(data[[i]])#
	}
diag(Y[tp,,]) = 0
Y[tp, which(avail1[tp, ]==0), ] = 0
Y[tp, , which(avail1[tp, ]==0)] = 0
data = sapply(1:500, function(r){table(floor(UN$Degree[[tp]][r,]))})
datamat = matrix(0, 500, 20)
colnames(datamat) = 0:19
for (i in 1:500) {
datamat[i, which(colnames(datamat) %in% names(data[[i]]))] = data[[i]] / sum(data[[i]])
}
head(datamat)
data
which(colnames(datamat) %in% names(data[[i]]))
data[[i]]
datamat[i, which(colnames(datamat) %in% names(data[[i]]))]
which(colnames(datamat) %in% names(data[[i]]))
colnames(datamat)
names(data[[i]])
data
summary(unlist(data))
daata
data[[1]]
table(unlist(names(data[[1]])))
table(unlsit(lapply(data, function(x){names(x)})))
table(unlist(lapply(data, function(x){names(x)})))
length(table(unlist(lapply(data, function(x){names(x)}))))
diag(Y[tp,,]) = 0#
	Y[tp, which(avail1[tp, ]==0), ] = 0#
	Y[tp, , which(avail1[tp, ]==0)] = 0#
	data = sapply(1:500, function(r){table(floor(UN$Degree[[tp]][r,]))})#
	datamat = matrix(0, 500, 25)#
	colnames(datamat) = c(0, 32:55)#
	for (i in 1:500) {#
		datamat[i, which(colnames(datamat) %in% names(data[[i]]))] = data[[i]] / sum(data[[i]])#
	}
pp = list()#
for (tp in 1:32) {#
	diag(Y[tp,,]) = 0#
	Y[tp, which(avail1[tp, ]==0), ] = 0#
	Y[tp, , which(avail1[tp, ]==0)] = 0#
	data = sapply(1:500, function(r){table(floor(UN$Degree[[tp]][r,]))})#
	datamat = matrix(0, 500, 25)#
	colnames(datamat) = c(0, 32:55)#
	for (i in 1:500) {#
		datamat[i, which(colnames(datamat) %in% names(data[[i]]))] = data[[i]] / sum(data[[i]])#
	}#
	datamat2 = data.frame(Proportion = c(datamat), Degree = factor(c(sapply(0:19, function(k){rep(k, 500)}))), Model = as.factor("DAME"))#
	data = sapply(1:500, function(r){table(floor(UN2$Degree[[tp]][r,]))})#
	datamat = matrix(0, 500, 25)#
	colnames(datamat) = c(0, 32:55)#
	for (i in 1:500) {#
		datamat[i, which(colnames(datamat) %in% names(data[[i]]))] = data[[i]] / sum(data[[i]])#
	}#
	datamat2 = rbind(datamat2, data.frame(Proportion = c(datamat), Degree = factor(c(sapply(0:19, function(k){rep(k, 500)}))), Model = as.factor("AMEN")))#
	data = sapply(1:500, function(r){table(floor(UN3$Degree[[tp]][r,]))})#
	datamat = matrix(0, 500, 25)#
	colnames(datamat) = c(0, 32:55)#
	for (i in 1:500) {#
		datamat[i, which(colnames(datamat) %in% names(data[[i]]))] = data[[i]] / sum(data[[i]])#
	}#
	datamat2 =  rbind(datamat2, data.frame(Proportion = c(datamat), Degree = factor(c(sapply(0:19, function(k){rep(k, 500)}))), Model = as.factor("DLSM"))	)#
	datamat2 = as.data.frame(datamat2)#
	observedpp = table(floor(rowSums(Y[tp,,]))) / sum(table(floor(rowSums(Y[tp,,]))))#
	pvec = rep(0, 25)#
	names(pvec) = c(0, 32:55)#
	pvec[which(names(pvec) %in% names(observedpp))] = observedpp#
	observed = data.frame(Proportion = pvec, Degree = as.numeric(1:20))#
	pp[[tp]] = ggplot(datamat2, aes(x = Degree, y = Proportion, colour = as.factor(Model))) + geom_boxplot(outlier.size = 0.5, position = position_dodge()) + theme_bw() + geom_line(data = observed, colour = "grey60", size = 0.8)+scale_colour_discrete(name = "Model")+ggtitle(years[tp])#
}
for (tp in 1:32) {#
	diag(Y[tp,,]) = 0#
	Y[tp, which(avail1[tp, ]==0), ] = 0#
	Y[tp, , which(avail1[tp, ]==0)] = 0#
	data = sapply(1:500, function(r){table(floor(UN$Degree[[tp]][r,]))})#
	datamat = matrix(0, 500, 25)#
	colnames(datamat) = c(0, 32:55)#
	for (i in 1:500) {#
		datamat[i, which(colnames(datamat) %in% names(data[[i]]))] = data[[i]] / sum(data[[i]])#
	}#
	datamat2 = data.frame(Proportion = c(datamat), Degree = factor(c(sapply(0:19, function(k){rep(k, 500)}))), Model = as.factor("DAME"))#
	data = sapply(1:500, function(r){table(floor(UN2$Degree[[tp]][r,]))})#
	datamat = matrix(0, 500, 25)#
	colnames(datamat) = c(0, 32:55)#
	for (i in 1:500) {#
		datamat[i, which(colnames(datamat) %in% names(data[[i]]))] = data[[i]] / sum(data[[i]])#
	}
}
datamat2 = data.frame(Proportion = c(datamat), Degree = factor(c(sapply(0:25, function(k){rep(k, 500)}))), Model = as.factor("DAME"))
factor(c(sapply(0:25, function(k){rep(k, 500)})))
diag(Y[tp,,]) = 0#
	Y[tp, which(avail1[tp, ]==0), ] = 0#
	Y[tp, , which(avail1[tp, ]==0)] = 0#
	data = sapply(1:500, function(r){table(floor(UN$Degree[[tp]][r,]))})#
	datamat = matrix(0, 500, 25)#
	colnames(datamat) = c(0, 32:55)#
	for (i in 1:500) {#
		datamat[i, which(colnames(datamat) %in% names(data[[i]]))] = data[[i]] / sum(data[[i]])#
	}#
	datamat2 = data.frame(Proportion = c(datamat), Degree = factor(c(sapply(c(0, 32:55), function(k){rep(k, 500)}))), Model = as.factor("DAME"))#
	data = sapply(1:500, function(r){table(floor(UN2$Degree[[tp]][r,]))})#
	datamat = matrix(0, 500, 25)#
	colnames(datamat) = c(0, 32:55)#
	for (i in 1:500) {#
		datamat[i, which(colnames(datamat) %in% names(data[[i]]))] = data[[i]] / sum(data[[i]])#
	}
diag(Y[tp,,]) = 0#
	Y[tp, which(avail1[tp, ]==0), ] = 0#
	Y[tp, , which(avail1[tp, ]==0)] = 0#
	data = sapply(1:500, function(r){table(floor(UN$Degree[[tp]][r,]))})#
	datamat = matrix(0, 500, 25)#
	colnames(datamat) = c(0, 32:55)#
	for (i in 1:500) {#
		datamat[i, which(colnames(datamat) %in% names(data[[i]]))] = data[[i]] / sum(data[[i]])#
	}
data = sapply(1:500, function(r){table(floor(UN2$Degree[[tp]][r,]))})
datamat2 = data.frame(Proportion = c(datamat), Degree = factor(c(sapply(c(0, 32:55), function(k){rep(k, 500)}))), Model = as.factor("DAME"))
datamat = matrix(0, 500, 25)
colnames(datamat) = c(0, 32:55)
diag(Y[tp,,]) = 0#
	Y[tp, which(avail1[tp, ]==0), ] = 0#
	Y[tp, , which(avail1[tp, ]==0)] = 0#
	data = sapply(1:500, function(r){table(floor(UN$Degree[[tp]][r,]))})#
	datamat = matrix(0, 500, 25)#
	colnames(datamat) = c(0, 32:55)#
	for (i in 1:500) {#
		datamat[i, which(colnames(datamat) %in% names(data[[i]]))] = data[[i]] / sum(data[[i]])#
	}#
	datamat2 = data.frame(Proportion = c(datamat), Degree = factor(c(sapply(c(0, 32:55), function(k){rep(k, 500)}))), Model = as.factor("DAME"))#
	data = sapply(1:500, function(r){table(floor(UN2$Degree[[tp]][r,]))})#
	datamat = matrix(0, 500, 25)#
	colnames(datamat) = c(0, 32:55)#
	for (i in 1:500) {#
		datamat[i, which(colnames(datamat) %in% names(data[[i]]))] = data[[i]] / sum(data[[i]])#
	}
table(unlist(lapply(data, function(x){names(x)})))
length(table(unlist(lapply(data, function(x){names(x)}))))
length(c(0, 29:58))
diag(Y[tp,,]) = 0#
	Y[tp, which(avail1[tp, ]==0), ] = 0#
	Y[tp, , which(avail1[tp, ]==0)] = 0#
	data = sapply(1:500, function(r){table(floor(UN$Degree[[tp]][r,]))})#
	datamat = matrix(0, 500, 31)#
	colnames(datamat) = c(0, 29:58)#
	for (i in 1:500) {#
		datamat[i, which(colnames(datamat) %in% names(data[[i]]))] = data[[i]] / sum(data[[i]])#
	}#
	datamat2 = data.frame(Proportion = c(datamat), Degree = factor(c(sapply(c(0, 29:58), function(k){rep(k, 500)}))), Model = as.factor("DAME"))#
	data = sapply(1:500, function(r){table(floor(UN2$Degree[[tp]][r,]))})#
	datamat = matrix(0, 500, 31)#
	colnames(datamat) = c(0, 29:58)#
	for (i in 1:500) {#
		datamat[i, which(colnames(datamat) %in% names(data[[i]]))] = data[[i]] / sum(data[[i]])#
	}#
	datamat2 = rbind(datamat2, data.frame(Proportion = c(datamat), Degree = factor(c(sapply(c(0, 29:58), function(k){rep(k, 500)}))), Model = as.factor("AMEN")))
data = sapply(1:500, function(r){table(floor(UN3$Degree[[tp]][r,]))})
table(unlist(lapply(data, function(x){names(x)})))
pp = list()#
for (tp in 1:32) {#
	diag(Y[tp,,]) = 0#
	Y[tp, which(avail1[tp, ]==0), ] = 0#
	Y[tp, , which(avail1[tp, ]==0)] = 0#
	data = sapply(1:500, function(r){table(floor(UN$Degree[[tp]][r,]))})#
	datamat = matrix(0, 500, 31)#
	colnames(datamat) = c(0, 29:58)#
	for (i in 1:500) {#
		datamat[i, which(colnames(datamat) %in% names(data[[i]]))] = data[[i]] / sum(data[[i]])#
	}#
	datamat2 = data.frame(Proportion = c(datamat), Degree = factor(c(sapply(c(0, 29:58), function(k){rep(k, 500)}))), Model = as.factor("DAME"))#
	data = sapply(1:500, function(r){table(floor(UN2$Degree[[tp]][r,]))})#
	datamat = matrix(0, 500, 31)#
	colnames(datamat) = c(0, 29:58)#
	for (i in 1:500) {#
		datamat[i, which(colnames(datamat) %in% names(data[[i]]))] = data[[i]] / sum(data[[i]])#
	}#
	datamat2 = rbind(datamat2, data.frame(Proportion = c(datamat), Degree = factor(c(sapply(c(0, 29:58), function(k){rep(k, 500)}))), Model = as.factor("AMEN")))#
	data = sapply(1:500, function(r){table(floor(UN3$Degree[[tp]][r,]))})#
	datamat = matrix(0, 500, 31)#
	colnames(datamat) = c(0, 29:58)#
	for (i in 1:500) {#
		datamat[i, which(colnames(datamat) %in% names(data[[i]]))] = data[[i]] / sum(data[[i]])#
	}#
	datamat2 =  rbind(datamat2, data.frame(Proportion = c(datamat), Degree = factor(c(sapply(c(0, 29:58), function(k){rep(k, 500)}))), Model = as.factor("DLSM"))	)#
	datamat2 = as.data.frame(datamat2)#
	observedpp = table(floor(rowSums(Y[tp,,]))) / sum(table(floor(rowSums(Y[tp,,]))))#
	pvec = rep(0, 31)#
	names(pvec) = c(0, 29:58)#
	pvec[which(names(pvec) %in% names(observedpp))] = observedpp#
	observed = data.frame(Proportion = pvec, Degree = as.numeric(1:20))#
	pp[[tp]] = ggplot(datamat2, aes(x = Degree, y = Proportion, colour = as.factor(Model))) + geom_boxplot(outlier.size = 0.5, position = position_dodge()) + theme_bw() + geom_line(data = observed, colour = "grey60", size = 0.8)+scale_colour_discrete(name = "Model")+ggtitle(years[tp])#
}
pp = list()#
for (tp in 1:32) {#
	diag(Y[tp,,]) = 0#
	Y[tp, which(avail1[tp, ]==0), ] = 0#
	Y[tp, , which(avail1[tp, ]==0)] = 0#
	data = sapply(1:500, function(r){table(floor(UN$Degree[[tp]][r,]))})#
	datamat = matrix(0, 500, 31)#
	colnames(datamat) = c(0, 29:58)#
	for (i in 1:500) {#
		datamat[i, which(colnames(datamat) %in% names(data[[i]]))] = data[[i]] / sum(data[[i]])#
	}#
	datamat2 = data.frame(Proportion = c(datamat), Degree = factor(c(sapply(c(0, 29:58), function(k){rep(k, 500)}))), Model = as.factor("DAME"))#
	data = sapply(1:500, function(r){table(floor(UN2$Degree[[tp]][r,]))})#
	datamat = matrix(0, 500, 31)#
	colnames(datamat) = c(0, 29:58)#
	for (i in 1:500) {#
		datamat[i, which(colnames(datamat) %in% names(data[[i]]))] = data[[i]] / sum(data[[i]])#
	}#
	datamat2 = rbind(datamat2, data.frame(Proportion = c(datamat), Degree = factor(c(sapply(c(0, 29:58), function(k){rep(k, 500)}))), Model = as.factor("AMEN")))#
	data = sapply(1:500, function(r){table(floor(UN3$Degree[[tp]][r,]))})#
	datamat = matrix(0, 500, 31)#
	colnames(datamat) = c(0, 29:58)#
	for (i in 1:500) {#
		datamat[i, which(colnames(datamat) %in% names(data[[i]]))] = data[[i]] / sum(data[[i]])#
	}#
	datamat2 =  rbind(datamat2, data.frame(Proportion = c(datamat), Degree = factor(c(sapply(c(0, 29:58), function(k){rep(k, 500)}))), Model = as.factor("DLSM"))	)#
	datamat2 = as.data.frame(datamat2)#
	observedpp = table(floor(rowSums(Y[tp,,]))) / sum(table(floor(rowSums(Y[tp,,]))))#
	pvec = rep(0, 31)#
	names(pvec) = c(0, 29:58)#
	pvec[which(names(pvec) %in% names(observedpp))] = observedpp#
	observed = data.frame(Proportion = pvec, Degree = as.numeric(c(0, 29:58)))#
	pp[[tp]] = ggplot(datamat2, aes(x = Degree, y = Proportion, colour = as.factor(Model))) + geom_boxplot(outlier.size = 0.5, position = position_dodge()) + theme_bw() + geom_line(data = observed, colour = "grey60", size = 0.8)+scale_colour_discrete(name = "Model")+ggtitle(years[tp])#
}
diag(Y[tp,,]) = 0#
	Y[tp, which(avail1[tp, ]==0), ] = 0#
	Y[tp, , which(avail1[tp, ]==0)] = 0#
	data = sapply(1:500, function(r){table(floor(UN$Degree[[tp]][r,]))})#
	datamat = matrix(0, 500, 31)#
	colnames(datamat) = c(0, 29:58)#
	for (i in 1:500) {#
		datamat[i, which(colnames(datamat) %in% names(data[[i]]))] = data[[i]] / sum(data[[i]])#
	}#
	datamat2 = data.frame(Proportion = c(datamat), Degree = factor(c(sapply(c(0, 29:58), function(k){rep(k, 500)}))), Model = as.factor("DAME"))#
	data = sapply(1:500, function(r){table(floor(UN2$Degree[[tp]][r,]))})#
	datamat = matrix(0, 500, 31)#
	colnames(datamat) = c(0, 29:58)#
	for (i in 1:500) {#
		datamat[i, which(colnames(datamat) %in% names(data[[i]]))] = data[[i]] / sum(data[[i]])#
	}#
	datamat2 = rbind(datamat2, data.frame(Proportion = c(datamat), Degree = factor(c(sapply(c(0, 29:58), function(k){rep(k, 500)}))), Model = as.factor("AMEN")))#
	data = sapply(1:500, function(r){table(floor(UN3$Degree[[tp]][r,]))})#
	datamat = matrix(0, 500, 31)#
	colnames(datamat) = c(0, 29:58)#
	for (i in 1:500) {#
		datamat[i, which(colnames(datamat) %in% names(data[[i]]))] = data[[i]] / sum(data[[i]])#
	}#
	datamat2 =  rbind(datamat2, data.frame(Proportion = c(datamat), Degree = factor(c(sapply(c(0, 29:58), function(k){rep(k, 500)}))), Model = as.factor("DLSM"))	)
pp = list()
diag(Y[tp,,]) = 0#
	Y[tp, which(avail1[tp, ]==0), ] = 0#
	Y[tp, , which(avail1[tp, ]==0)] = 0#
	data = sapply(1:500, function(r){table(floor(UN$Degree[[tp]][r,]))})#
	datamat = matrix(0, 500, 31)#
	colnames(datamat) = c(0, 29:58)#
	for (i in 1:500) {#
		datamat[i, which(colnames(datamat) %in% names(data[[i]]))] = data[[i]] / sum(data[[i]])#
	}#
	datamat2 = data.frame(Proportion = c(datamat), Degree = factor(c(sapply(c(0, 29:58), function(k){rep(k, 500)}))), Model = as.factor("DAME"))#
	data = sapply(1:500, function(r){table(floor(UN2$Degree[[tp]][r,]))})#
	datamat = matrix(0, 500, 31)#
	colnames(datamat) = c(0, 29:58)#
	for (i in 1:500) {#
		datamat[i, which(colnames(datamat) %in% names(data[[i]]))] = data[[i]] / sum(data[[i]])#
	}
c(0, 29:58)
length(c(0, 29:58)#
)
diag(Y[tp,,]) = 0#
	Y[tp, which(avail1[tp, ]==0), ] = 0#
	Y[tp, , which(avail1[tp, ]==0)] = 0#
	data = sapply(1:500, function(r){table(floor(UN$Degree[[tp]][r,]))})#
	datamat = matrix(0, 500, 31)#
	colnames(datamat) = c(0, 29:58)#
	for (i in 1:500) {#
		datamat[i, which(colnames(datamat) %in% names(data[[i]]))] = data[[i]] / sum(data[[i]])#
	}
i
datamat[i, which(colnames(datamat) %in% names(data[[i]]))]
data[[i]] / sum(data[[i]])
