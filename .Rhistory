load("/Users/bomin8319/Desktop/UN_full.RData")
Time = 32
N = 97
#construct eigenvector-ized U's
Unew = list()
R = 2
for (tp in 1:32) {
Unew[[tp]] = matrix(NA, nrow = nrow(UN$U[[tp]]), ncol = 2*500)
rownames(UN$U[[tp]])[which(rownames(UN$U[[tp]]) %in% "GFR")] = "GMY"
rownames(Unew[[tp]]) = rownames(UN$U[[tp]])
for (iter in 1:500){
if (sum(is.na(UN$UPS[[tp]][,1]))>0){
Uold = UN$UPS[[tp]][-which(is.na(UN$UPS[[tp]][,1])),(2*iter-1):(2*iter)]
} else {
Uold = UN$UPS[[tp]][,(2*iter-1):(2*iter)]
}
UDU = Uold %*% diag(UN$DPS[[tp]][iter,]) %*% t(Uold)
eULU = eigen(UDU)
Unew[[tp]][, (2*iter-1):(2*iter)] = eULU$vec[, seq(1, R, length = R), drop = FALSE]	}
}
#1. Do a procrustes for the U's (from eigendecomposition of UDU) in each iteration and get their interval.Â 
#fix USA and JPN's position but not fix those to be same
library(MCMCpack)
Upost1 <- lapply(1:32, function(tp) Unew[[tp]][,1])
Upost2 <- lapply(1:32, function(tp) Unew[[tp]][,2]
)
for (tp in 1:32) {
Xstar = matrix(0, nrow = nrow(UN$U[[tp]]), ncol = 2)
rownames(Xstar) =rownames(UN$U[[tp]])
Xstar = Unew[[tp]][,1:2]
for (iter in 2:500){
Utrans= procrustes(Unew[[tp]][,(2*iter-1):(2*iter)], Xstar)$X.new
Upost1[[tp]] = cbind(Upost1[[tp]], Utrans[,1])
Upost2[[tp]] = cbind(Upost2[[tp]], Utrans[,2])
}
}
yearsummary = list()
for (tp in 1:32) {
yearsummary[[tp]] = cbind(summary(mcmc(t(Upost1[[tp]])))[[2]][,c(1,3, 5)], summary(mcmc(t(Upost2[[tp]])))[[2]][,c(1,3, 5)])
rownames(yearsummary[[tp]]) = rownames(UN$U[[tp]])
}
angle <- function(x,y){
dot.prod <- x%*%y
norm.x <- norm(x,type="2")
norm.y <- norm(y,type="2")
theta <- acos(dot.prod / (norm.x * norm.y))
if (is.na(theta)) theta <- 0
as.numeric(theta)
}
angles = list()
countrypair = list()
for (tp in 1:32) {
N = nrow(Unew[[tp]])
countrypair[[tp]] =  t(combn(rownames(Unew[[tp]]), 2))
angles[[tp]] = matrix(NA, nrow = N * (N-1) / 2, ncol = 500)
for (iter in 1:500){
Unow = Unew[[tp]][,(2*iter-1):(2*iter)]
for (i in 1:nrow(angles[[tp]])) {
angles[[tp]][i, iter] = angle(Unow[which(rownames(Unow) %in% countrypair[[tp]][i,1]),], Unow[which(rownames(Unow) %in% countrypair[[tp]][i,2]),])
}
}
}
save(angles, file = "angles.RData")
library(MCMCpack)
countrypair2 = list()
for (tp in 1:32) {
countrypair2[[tp]] = matrix(NA, nrow = nrow(countrypair[[tp]]), ncol = 4)
for (i in 1:nrow(countrypair[[tp]])) {
summary = summary(mcmc(angles[[tp]][i,]))[[2]][c(1,3, 5)]
countrypair2[[tp]][i, ] =  c(summary, (summary[1] <= 1 & summary[3] >= 1))
}
countrypair[[tp]] = data.frame(countrypair[[tp]], countrypair2[[tp]])
}
similar = list()
for (tp in 1:32){
similar[[tp]] =countrypair[[tp]][which(countrypair[[tp]][,6] == 1), 1:2]
}
similar[[1]]
library(gdata)
ideal <- read.table('/Users/bomin8319/Desktop/Old Research/DaveMaggie/dataverse_files/Idealpoints.tab', sep="\t", header=TRUE)
description <- read.csv('/Users/bomin8319/Desktop/Old Research/DaveMaggie/dataverse_files/descriptionsnew.csv',header=TRUE)
head(ideal)
head(description)
unimportant <- description[description$importantvote==0,-9:-10]
dim(unimportant)
head(unimportant)
time<-strptime(unimportant[,7], "%m/%d/%y")
years <-unique(time$year+1900)
ideal <- ideal[ideal$Year %in% years,]
countrycode <-unique(ideal[,c(2,3,6)])
countrycode<-countrycode[order(countrycode[,1]),]
head(countrycode)
head(unimportant)
important <- description[description$importantvote==1,-9:-10]
View(important)
load('/Users/bomin8319/Desktop/Old Research/DaveMaggie/agreedata.RData')
head(agreedata)
head(unimportant)
head(ideal)
ideal <- ideal[ideal$Year %in% years,]
years
rm(list=l())
rm(list=ls())
library(gdata)
dyadic<-read.table('/Users/bomin8319/DesktopOld Research/DaveMaggie/dataverse_files/Dyadicdata.tab', sep="\t", header=TRUE)
raw <- read.table('/Users/bomin8319/Desktop/Old Research/DaveMaggie/dataverse_files/RawVotingdata.tab', sep="\t", header=TRUE)
dyadic<-read.table('/Users/bomin8319/Desktop/Old Research/DaveMaggie/dataverse_files/Dyadicdata.tab', sep="\t", header=TRUE)
raw <- read.table('/Users/bomin8319/Desktop/Old Research/DaveMaggie/dataverse_files/RawVotingdata.tab', sep="\t", header=TRUE)
ideal <- read.table('/Users/bomin8319/Desktop/Old Research/DaveMaggie/dataverse_files/Idealpoints.tab', sep="\t", header=TRUE)
description <- read.csv('/Users/bomin8319/Desktop/Old Research/DaveMaggie/dataverse_files/descriptionsnew.csv',header=TRUE)
important <- description[description$importantvote==0,-9:-10]
time<-strptime(important[,7], "%m/%d/%y")
years <-unique(time$year+1900)
dyadic <- dyadic[dyadic$year %in% years,]
ideal <- ideal[ideal$Year %in% years,]
countrycode <-unique(ideal[,c(2,3,6)])
countrycode<-countrycode[order(countrycode[,1]),]
rawimportant <-raw[raw$rcid %in% important$rcid,]
rawimportant$vote[which(rawimportant$vote==8)]<-4
rawimportant$vote[which(rawimportant$vote==9)]<-5
countrycode2 <-unique(ideal[,c(2,3,6)])
countrycode2<-countrycode2[order(countrycode2[,1]),]
length(countrycode2)
countrycode2
years
time
rm(list=ls())
library(gdata)
dyadic<-read.table('/Users/bomin8319/Desktop/Old Research/DaveMaggie/dataverse_files/Dyadicdata.tab', sep="\t", header=TRUE)
raw <- read.table('/Users/bomin8319/Desktop/Old Research/DaveMaggie/dataverse_files/RawVotingdata.tab', sep="\t", header=TRUE)
ideal <- read.table('/Users/bomin8319/Desktop/Old Research/DaveMaggie/dataverse_files/Idealpoints.tab', sep="\t", header=TRUE)
description <- read.csv('/Users/bomin8319/Desktop/Old Research/DaveMaggie/dataverse_files/descriptionsnew.csv',header=TRUE)
important <- description[description$importantvote==0,-9:-10]
dim(important)
head(strptime(important[,7], "%m/%d/%y"))
head(important[,7])
tail(important[,7])
time<-strptime(important[,7], "%m/%d/%y")
head(time)
tail(time)
time
dim(time)
years <-unique(time$year+1900)
years
years = c(1983:2014)
dyadic <- dyadic[dyadic$year %in% years,]
ideal <- ideal[ideal$Year %in% years,]
dim(ideal)
head(ideal)
countrycode <-unique(ideal[,c(2,3,6)])
countrycode<-countrycode[order(countrycode[,1]),]
rawimportant <-raw[raw$rcid %in% important$rcid,]
rawimportant$vote[which(rawimportant$vote==8)]<-4
rawimportant$vote[which(rawimportant$vote==9)]<-5
countrycode2 <-unique(ideal[,c(2,3,6)])
countrycode2<-countrycode2[order(countrycode2[,1]),]
head(countrycode2)
head(rawimportant)
agreedata <-list()
for (t in 1:length(years)){
print(t)
agreedata[[t]]<- list(year=years[t])
data <- dyadic[dyadic$year==years[t],c(1:3, 17, 19) ]
data <- data[!is.na(data[,4]),]
countrycode <- unique(c(data$ccode2, data$ccode1))
countrycode<-countrycode[order(countrycode)]
agreedata[[t]]$network <- matrix(NA, nrow=length(countrycode), ncol=length(countrycode))
agreedata[[t]]$jointvote <- matrix(NA, nrow=length(countrycode), ncol=length(countrycode))
for (i in 1:nrow(data)){
country1 <- which(countrycode==data[i,1]); country2 <- which(countrycode==data[i,2])
agreedata[[t]]$network[country1, country2] <- data[i,4]
agreedata[[t]]$network[country2, country1] <- data[i,4]
agreedata[[t]]$jointvote[country1, country2] <- data[i,5]
agreedata[[t]]$jointvote[country2, country1] <- data[i,5]
}
rownames(agreedata[[t]]$network)<-countrycode2[countrycode2[,1] %in% countrycode,2]; colnames(agreedata[[t]]$network)<-countrycode2[countrycode2[,1] %in% countrycode,2]
rownames(agreedata[[t]]$jointvote)<-countrycode2[countrycode2[,1] %in% countrycode,2]; colnames(agreedata[[t]]$jointvote)<-countrycode2[countrycode2[,1] %in% countrycode,2]
}
agreedata[[1]]
agreedata[[1]]$network
head(data)
library(gdata)
dyadic<-read.table('/Users/bomin8319/Desktop/Old Research/DaveMaggie/dataverse_files/Dyadicdata.tab', sep="\t", header=TRUE)
raw <- read.table('/Users/bomin8319/Desktop/Old Research/DaveMaggie/dataverse_files/RawVotingdata.tab', sep="\t", header=TRUE)
ideal <- read.table('/Users/bomin8319/Desktop/Old Research/DaveMaggie/dataverse_files/Idealpoints.tab', sep="\t", header=TRUE)
description <- read.csv('/Users/bomin8319/Desktop/Old Research/DaveMaggie/dataverse_files/descriptionsnew.csv',header=TRUE)
important <- description[description$importantvote==0,-9:-10]
time<-strptime(important[,7], "%m/%d/%y")
years <-unique(time$year+1900)
years = c(1983:2014)
dyadic <- dyadic[dyadic$year %in% years,]
ideal <- ideal[ideal$Year %in% years,]
countrycode <-unique(ideal[,c(2,3,6)])
countrycode<-countrycode[order(countrycode[,1]),]
rawimportant <-raw[raw$rcid %in% important$rcid,]
rawimportant$vote[which(rawimportant$vote==8)]<-4
rawimportant$vote[which(rawimportant$vote==9)]<-5
countrycode2 <-unique(ideal[,c(2,3,6)])
countrycode2<-countrycode2[order(countrycode2[,1]),]
head(dyadic)
agreedata <-list()
t = 1
print(t)
agreedata[[t]]<- list(year=years[t])
data <- dyadic[dyadic$year==years[t],c(1:3, 10, 12) ]
head(data)
!is.na(data[,4])
data <- data[!is.na(data[,4]),]
head(data)
agreedata <-list()
for (t in 1:length(years)){
print(t)
agreedata[[t]]<- list(year=years[t])
data <- dyadic[dyadic$year==years[t],c(1:3, 10, 12) ]
data <- data[!is.na(data[,4]),]
countrycode <- unique(c(data$ccode2, data$ccode1))
countrycode<-countrycode[order(countrycode)]
agreedata[[t]]$network <- matrix(NA, nrow=length(countrycode), ncol=length(countrycode))
agreedata[[t]]$jointvote <- matrix(NA, nrow=length(countrycode), ncol=length(countrycode))
for (i in 1:nrow(data)){
country1 <- which(countrycode==data[i,1]); country2 <- which(countrycode==data[i,2])
agreedata[[t]]$network[country1, country2] <- data[i,4]
agreedata[[t]]$network[country2, country1] <- data[i,4]
agreedata[[t]]$jointvote[country1, country2] <- data[i,5]
agreedata[[t]]$jointvote[country2, country1] <- data[i,5]
}
rownames(agreedata[[t]]$network)<-countrycode2[countrycode2[,1] %in% countrycode,2]; colnames(agreedata[[t]]$network)<-countrycode2[countrycode2[,1] %in% countrycode,2]
rownames(agreedata[[t]]$jointvote)<-countrycode2[countrycode2[,1] %in% countrycode,2]; colnames(agreedata[[t]]$jointvote)<-countrycode2[countrycode2[,1] %in% countrycode,2]
}
agreedata[[1]]
sapply(1:32, function(t) mean(agreedata[[t]]$network[upper.tri(agreedata[[t]]$network)]))
mean(agreedata[[t]]$network[upper.tri(agreedata[[t]]$network)])
t
t =1
t
mean(agreedata[[t]]$network[upper.tri(agreedata[[t]]$network)])
agreedata[[t]]$network[upper.tri(agreedata[[t]]$network)]
sapply(1:32, function(t) mean(agreedata[[t]]$network[upper.tri(agreedata[[t]]$network)], na.rm = TRUE))
sapply(1:32, function(t) mean(agreedata[[t]]$jointvote[upper.tri(agreedata[[t]]$network)], na.rm = TRUE))
