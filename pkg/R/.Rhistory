#full
library(devtools)
setwd('/Users/bomin8319/Desktop/DAME/pkg/R')
load_all()
load("/Users/bomin8319/Desktop/DAME/UNdatafull.RData")
attach(UNdatafull)
library(FastGP)
library(mvtnorm)
library(fields)
library(reshape)
library(MCMCpack)
library(expm)
library(igraph)
library(DLFM2)
library(coda)
library(ggplot2)
library(gridExtra)
ggplotColours <- function(n = 6, h = c(0, 360) + 15){
if ((diff(h) %% 360) < 1) h[2] <- h[2] - 360/n
hcl(h = (seq(h[1], h[2], length = n)), c = 100, l = 65)
}
number_ticks <- function(n) {function(limits) pretty(limits, n)}
# 96 country version
Time = 32
N = 96
# not existing countries -> all missing values imputed using model (biased)
avail1 = matrix(1, Time, N)
colnames(avail1) = colnames(UNdatafull$Y)
avail1[1:8, which(colnames(avail1) %in% c("ROK", "PRK"))] =0 #North and South Korea did not joined UN voting until 1990
avail1[1:9, which(colnames(avail1) %in% c("RUS"))] = 0 #RUS X variables not existed until 1991
avail1[9:14, which(colnames(avail1) %in% c("IRQ"))] = 0 #Under the rule of Saddam, economic data were considered state secrets; thus, reliable data for the era was limited. (From 1990 until Saddam accepted the terms and conditions of UN Resolution 986 in 1996 the GDP in Iraq remained at less than 30 percent of the 1989 value.)
Degrees = vapply(1:Time, function(tp) {rowSums(Y[tp,,], na.rm = TRUE)}, rep(0, N))
corr = vapply(1:31, function(l) {cor(Degrees[1:(N*(Time - l))], Degrees[(1 + N*l):(N*Time)], use = "complete")}, 0)
plot(corr, type = 'l')
dimnames(X)
setwd("/Users/bomin8319/Desktop")
UN = DLFM_MH(Y[1:32,,], X[1:32,,,1:6], RE = c("additive", "multiplicative"), R = 2, avail = avail1, burn = 1000, nscan = 5000, odens = 10, plot = FALSE)
warnings(
)
setwd('/Users/bomin8319/Desktop/DAME/pkg/R')
load_all()
DLFM_MH()
DLFM_MH
UN = DLFM_MH(Y[1:Time,,], X[1:Time,,,1:6], RE = c("additive", "multiplicative"), R = 2, avail = avail1, burn = 0, nscan = 5000, odens = 10, plot = FALSE)
Degrees = c(vapply(1:Time, function(tp) { rowSums(YPS[[tp]], na.rm = TRUE)}, rep(0, N)))
Degrees
YPS
s2
YPS[[tp]]
meaningful_NA
Reduce('+', lapply1(1:P, function(p) {X[tp, , , p] * beta[tp, p]}))
outer(theta[tp, ], theta[tp, ], "+")
theta
UDU[[tp]]
U
D
d
u
U
u
U
meaningful_NA_rows
d
U[1,,]
U[2,,]
XB
U
setwd('/Users/bomin8319/Desktop/DAME/pkg/R')
load_all()
UN = DLFM_MH(Y[1:Time,,], X[1:Time,,,1:6], RE = c("additive", "multiplicative"), R = 2, avail = avail1, burn = 0, nscan = 5000, odens = 10, plot = FALSE)
U
d
UN = DLFM_MH(Y[1:Time,,], X[1:Time,,,1:6], RE = c("additive", "multiplicative"), R = 2, avail = avail1, burn = 0, nscan = 5000, odens = 10, plot = FALSE)
d
meaningful_NA
UDU
rs2_fc2(XB, theta, UDU, Y, a, b)
kappa
kappas
tau_p
rbeta_fc(X, beta, theta, UDU, Y, cinv[1:P], tau_p, s2)
s2 = rs2_fc2(XB, theta, UDU, Y, a, b)
for (p in 1:P) {
var.old = c(kappas[p], tau_p[p])
var.new = exp(rcpp_rmvnorm(1, 0.2 * diag(2) , log(var.old)))
u = log(runif(1))
temp = GPpost(var.new[1], matrix(beta[,p], ncol = 1), var.new[2], dist_ij, a, b) -
GPpost(var.old[1], matrix(beta[,p], ncol = 1), var.old[2], dist_ij, a, b)
alpha = min(0, temp)
if (u <= alpha) {
kappas[p] = var.new[1]
cinv[[p]] = rcppeigen_invert_matrix(Exponential(dist_ij, kappas[p]))
tau_p[p] = var.new[2]
}
}
tau_p
beta
rbeta_fc(X, beta, theta, UDU, Y, cinv[1:P], tau_p, s2)
beta = rbeta_fc(X, beta, theta, UDU, Y, cinv[1:P], tau_p, s2)
XB = lapply1(1:Time, function(tp) {
Reduce('+', lapply1(1:P, function(p){
X[tp, , , p] * beta[tp, p]
}))
})
XB[[1]]
var.old = c(kappas[P+1], tau_i)
var.new = exp(rcpp_rmvnorm(1, 0.2 * diag(2) , log(var.old)))
u = log(runif(1))
temp = GPpost(var.new[1], theta, var.new[2], dist_ij, a, b) -
GPpost(var.old[1], theta, var.old[2], dist_ij, a, b)
alpha = min(0, temp)
if (u <= alpha) {
kappas[P+1] = var.new[1]
cinv[[P+1]] = rcppeigen_invert_matrix(Exponential(dist_ij, kappas[P+1]))
tau_i = var.new[2]
}
tau_i
theta = rtheta_fc(XB, theta, UDU, Y, cinv[[P+1]], tau_i, s2)
theta
dim(theta)
theta[1,]
for (tp in meaningful_NA_years) {
theta[tp, meaningful_NA_rows[[tp]]] = 0
}
}
theta[1,]
U
rtauut_fc(U, a, b)
for (r in 1:R) {
var.old = c(kappas[P+1+r], tau_r[r])
var.new = exp(rcpp_rmvnorm(1, 0.2 * diag(2) , log(var.old)))
u = log(runif(1))
temp = GPpost(var.new[1], matrix(d[,r], ncol = 1), var.new[2], dist_ij, a, b) -
GPpost(var.old[1], matrix(d[,r], ncol = 1), var.old[2], dist_ij, a, b)
alpha = min(0, temp)
if (u <= alpha) {
kappas[P+1+r] = var.new[1]
cinv[[P+1+r]] = rcppeigen_invert_matrix(Exponential(dist_ij, kappas[P+1+r]))
tau_r[r] = var.new[2]
}
}
tau_u = rtauut_fc(U, a, b)
}
tau_u
XB
theta
U
d
Y
tau_u
s2
meaningful_NA_rows
ru_fc_NA(XB, theta, U, d, Y, tau_u, s2, meaningful_NA_rows)
load_all()
UN = DLFM_MH(Y[1:Time,,], X[1:Time,,,1:6], RE = c("additive", "multiplicative"), R = 2, avail = avail1, burn = 0, nscan = 5000, odens = 10, plot = FALSE)
Epp1
E[[1]]
tp
tp = 1
L = diag(d[tp, ])
L
(length(meaningful_NA_rows[[tp]]) > 0)
sample((1:N)[-meaningful_NA_rows[[tp]]])
meaningful_NA_rows[[tp]]
U[tp,-meaningful_NA_rows[[tp]],]
ilist = sample((1:N)[-meaningful_NA_rows[[tp]]])
U2 = U[tp,-meaningful_NA_rows[[tp]],]
(length(meaningful_NA_rows[[tp]]) > 0)
E2 = E[[tp]][i, -meaningful_NA_rows[[tp]]]
i = ilist[1]
i
E2 = E[[tp]][i, -meaningful_NA_rows[[tp]]]
E2
L %*% (apply(U2 * E2, 2, sum) - U[tp, i, ] * E[[tp]][i, i]) / s2
apply(U2 * E2, 2, sum)
U[tp, i, ] * E[[tp]][i, i]
U[tp, i, ]
E[[tp]][i, i]
E[[tp]]
E[[tp]][i,]
i
rownames(E[[1]])
rownames(E[[1]])[77]
XB[[1]][77,77]
X[1,,,1]
X[1,,,2]
sapply(1:32, function(x) summary(X[x,,,1]))
sapply(1:32, function(x) summary(X[x,,,2]))
sapply(1:32, function(x) c(min(X[x,,,2]), max(X[x,,,2]))
sapply(1:32, function(x) c(min(X[x,,,2]), max(X[x,,,2])))
sapply(1:32, function(x) c(min(X[x,,,3]), max(X[x,,,3])))
sapply(1:32, function(x) c(min(X[x,,,4]), max(X[x,,,4])))
sapply(1:32, function(x) c(min(X[x,,,5]), max(X[x,,,5])))
sapply(1:32, function(x) c(min(X[x,,,6]), max(X[x,,,6])))
for (tp in 1:32) {
for (p in 1:6) {
diag(X[tp,,,p])= NA
}
}
sapply(1:32, function(x) c(min(X[x,,,3]), max(X[x,,,3])))
for (tp in 1:32) {
for (p in 1:6) {
diag(X[tp,,,p])= 0
}
}
sapply(1:32, function(x) c(min(X[x,,,3]), max(X[x,,,3])))
sapply(1:32, function(x) c(min(X[x,,,2]), max(X[x,,,2])))
load_all()
UN = DLFM_MH(Y[1:Time,,], X[1:Time,,,1:6], RE = c("additive", "multiplicative"), R = 2, avail = avail1, burn = 0, nscan = 5000, odens = 10, plot = FALSE)
apply(U2 * E2, 2, sum)
U[tp, i, ] * E[[tp]][i, i]
l = L %*% (apply(U2 * E2, 2, sum) - U[tp, i, ] * E[[tp]][i, i]) / s2
l
iQ = rcppeigen_invert_matrix(diag(R) / tau_u[tp,] + L %*% (crossprod(U2) - U[tp, i, ] %*% t(U[tp, i, ])) %*% L / s2)
iQ
rcpp_rmvnorm(1, iQ, iQ %*% l)
X[1,,,2]
load_all()
load_all()
UN = DLFM_MH(Y[1:Time,,], X[1:Time,,,1:6], RE = c("additive", "multiplicative"), R = 2, avail = avail1, burn = 0, nscan = 5000, odens = 10, plot = FALSE)
UDU[[1]]
Degrees = c(vapply(1:Time, function(tp) { rowSums(YPS[[tp]], na.rm = TRUE)}, rep(0, N)))
Degrees
vapply(1:(Time-1), function(l) {cor(Degrees[1:(N*(Time - l))], Degrees[(1 + N*l):(N*Time)], use = "complete")}, 0)
