angles[[tp]][,1:2] = t(combn(rownames(Unow), 2))
t(combn(rownames(Unow), 2))
angles[[tp]] = matrix(NA, nrow = 2 + N * (N-1) / 2, ncol = 500)
angles[[tp]][,1:2] = t(combn(rownames(Unow), 2))
t(combn(rownames(Unow), 2))
angles[[tp]] = matrix(NA, nrow = N * (N-1) / 2, ncol = 2+500)
angles[[tp]][,1:2] = t(combn(rownames(Unow), 2))
angles[[1]]
angles[[1]][,1:3]
Unow = Unew[[tp]][,(2*iter-1):(2*iter)]
Unow
for (i in 1:nrow(angles[[tp]])) {#
			angles[[tp]][i, iter+2] = angle(Unow[which(rownames(Unow) %in% angles[[tp]][i,1]),], Unow[which(rownames(Unow) %in% angles[[tp]][i,2]),])
}
angles
angles[[1]][,1:3]
for (i in 1:nrow(angles[[tp]])) {#
			angles[[tp]][i, iter+2] = as.data.frame(angle(Unow[which(rownames(Unow) %in% angles[[tp]][i,1]),], Unow[which(rownames(Unow) %in% angles[[tp]][i,2]),]))#
		}
for (i in 1:nrow(angles[[tp]])) {#
			angles[[tp]][i, iter+2] = angle(Unow[which(rownames(Unow) %in% angles[[tp]][i,1]),], Unow[which(rownames(Unow) %in% angles[[tp]][i,2]),])#
		}
angles = list()
N = nrow(Unew[[tp]])#
	angles[[tp]] = matrix(NA, nrow = N * (N-1) / 2, ncol = 2+500)#
	angles[[tp]][,1:2] = t(combn(rownames(Unow), 2))
Unow = Unew[[tp]][,(2*iter-1):(2*iter)]
Unow
for (i in 1:nrow(angles[[tp]])) {#
			angles[[tp]][i, iter+2] = angle(Unow[which(rownames(Unow) %in% angles[[tp]][i,1]),], Unow[which(rownames(Unow) %in% angles[[tp]][i,2]),])#
		}
iter
angles[[1]][,1:3]
N = nrow(Unew[[tp]])#
	countrypair =  t(combn(rownames(Unow), 2))#
	angles[[tp]] = matrix(NA, nrow = N * (N-1) / 2, ncol = 500)
countrypair
N = nrow(Unew[[tp]])#
	countrypair =  t(combn(rownames(Unow), 2))#
	angles[[tp]] = matrix(NA, nrow = N * (N-1) / 2, ncol = 500)
Unow = Unew[[tp]][,(2*iter-1):(2*iter)]#
		for (i in 1:nrow(angles[[tp]])) {#
			angles[[tp]][i, iter] = angle(Unow[which(rownames(Unow) %in% countrypair[i,1]),], Unow[which(rownames(Unow) %in% countrypair[i,2]),])#
		}#
	}
angles[[1]][,1:2]
summary(angles[[1]][,1])
Unow[which(rownames(Unow) %in% countrypair[i,1]),]
Unow[which(rownames(Unow) %in% countrypair[i,2]),]
pi
dot.prod / (norm.x * norm.y)
load('~/Desktop/UN_full.RData')
Time = 32#
N = 97#
#construct eigenvector-ized U's#
Unew = list()#
R = 2#
for (tp in 1:32) {#
	Unew[[tp]] = matrix(NA, nrow = nrow(UN$U[[tp]]), ncol = 2*500)#
	rownames(UN$U[[tp]])[which(rownames(UN$U[[tp]]) %in% "GFR")] = "GMY"#
	rownames(Unew[[tp]]) = rownames(UN$U[[tp]])#
	for (iter in 1:500){#
		if (sum(is.na(UN$UPS[[tp]][,1]))>0){#
		Uold = UN$UPS[[tp]][-which(is.na(UN$UPS[[tp]][,1])),(2*iter-1):(2*iter)] #
		} else {#
			Uold = UN$UPS[[tp]][,(2*iter-1):(2*iter)] #
		}#
		UDU = Uold %*% diag(UN$DPS[[tp]][iter,]) %*% t(Uold)#
		eULU = eigen(UDU)#
		Unew[[tp]][, (2*iter-1):(2*iter)] = eULU$vec[, seq(1, R, length = R), drop = FALSE]	}#
}
angle <- function(x,y){#
  dot.prod <- x%*%y #
  norm.x <- norm(x,type="2")#
  norm.y <- norm(y,type="2")#
  theta <- acos(dot.prod / (norm.x * norm.y))#
  if (is.na(theta)) browser()#
  as.numeric(theta)#
}#
angles = list()#
countrypair = list()#
for (tp in 1:32) {#
	N = nrow(Unew[[tp]])#
	countrypair[[tp]] =  t(combn(rownames(Unew[[tp]]), 2))#
	angles[[tp]] = matrix(NA, nrow = N * (N-1) / 2, ncol = 500)#
	for (iter in 1:500){#
		Unow = Unew[[tp]][,(2*iter-1):(2*iter)]#
		for (i in 1:nrow(angles[[tp]])) {#
			angles[[tp]][i, iter] = angle(Unow[which(rownames(Unow) %in% countrypair[[tp]][i,1]),], Unow[which(rownames(Unow) %in% countrypair[[tp]][i,2]),])#
		}#
	}#
}
theta
dot.prod
norm.x
norm.y
dot.prod / (norm.x * norm.y)
acos(dot.prod / (norm.x * norm.y))
acos
?acos
dot.prod / (norm.x * norm.y)
acos(1)
Q
angle <- function(x,y){#
  dot.prod <- x%*%y #
  norm.x <- norm(x,type="2")#
  norm.y <- norm(y,type="2")#
  theta <- acos(dot.prod / (norm.x * norm.y))#
  if (is.na(theta)) theta <- 0 #
  as.numeric(theta)#
}#
angles = list()#
countrypair = list()#
for (tp in 1:32) {#
	N = nrow(Unew[[tp]])#
	countrypair[[tp]] =  t(combn(rownames(Unew[[tp]]), 2))#
	angles[[tp]] = matrix(NA, nrow = N * (N-1) / 2, ncol = 500)#
	for (iter in 1:500){#
		Unow = Unew[[tp]][,(2*iter-1):(2*iter)]#
		for (i in 1:nrow(angles[[tp]])) {#
			angles[[tp]][i, iter] = angle(Unow[which(rownames(Unow) %in% countrypair[[tp]][i,1]),], Unow[which(rownames(Unow) %in% countrypair[[tp]][i,2]),])#
		}#
	}#
}
which(is.na(unlist(angles)))
angles[[1]]
plot(angles[[1]][1,])
plot(angles[[1]][1,], type = 'l')
plot(angles[[1]][2,], type = 'l')
plot(angles[[1]][32,], type = 'l')
plot(angles[[10]][32,], type = 'l')
countrypair[[1]]
tp
i
i = 1
angles[[tp]][i,]
cbind(summary(mcmc(angles[[tp]][i,])[[2]][,c(1,3, 5)]
cbind(summary(mcmc(angles[[tp]][i,])[[2]][,c(1,3, 5)])
)
summary(mcmc(angles[[tp]][i,])[[2]][,c(1,3, 5)])
library(MCMCpack)
summary(mcmc(angles[[tp]][i,])[[2]][,c(1,3, 5)])
summary(mcmc(angles[[tp]][i,]))[[2]][,c(1,3, 5)])
summary(mcmc(angles[[tp]][i,]))[[2]][,c(1,3, 5)]
summary(mcmc(angles[[tp]][i,]))
summary(mcmc(angles[[tp]][i,]))[[2]]
summary(mcmc(angles[[tp]][i,]))[[2]][c(1,3, 5)]
for (tp in 1:32) {#
 for (i in 1:nrow(countrypair[[tp]])) {#
 	countrypair[[tp]][i, 3:5] =  summary(mcmc(angles[[tp]][i,]))[[2]][c(1,3, 5)]#
 }
}
head(countrypair[[1]])
countrypair2 = list()
for (tp in 1:32) {#
	countrypair2[[tp]] = matrix(NA, nrow = nrow(countrypair[[tp]]), ncol = 5)#
	countrypair2[[tp]][,1:2] = countrypair[[tp]]#
 for (i in 1:nrow(countrypair[[tp]])) {#
 	countrypair2[[tp]][i, 3:5] =  summary(mcmc(angles[[tp]][i,]))[[2]][c(1,3, 5)]#
 }#
}
countrypair2[[1]]
countrypair2 = list()#
for (tp in 1:32) {#
	countrypair2[[tp]] = matrix(NA, nrow = nrow(countrypair[[tp]]), ncol = 3)#
 for (i in 1:nrow(countrypair[[tp]])) {#
 	countrypair2[[tp]][i, ] =  summary(mcmc(angles[[tp]][i,]))[[2]][c(1,3, 5)]#
 }#
 	countrypair[[tp]] = data.frame(countrypair[[tp]], countrypair2[[tp]])#
}
countrypair[[1]]
arccos(1)
acos(1)
summary = summary(mcmc(angles[[tp]][i,]))[[2]][c(1,3, 5)]
summary
(summary[1] <= 1 & summary[3] >= 1)
summary[1] <= 1
summary[3] >= 1
library(MCMCpack)#
countrypair2 = list()#
for (tp in 1:32) {#
	countrypair2[[tp]] = matrix(NA, nrow = nrow(countrypair[[tp]]), ncol = 4)#
 for (i in 1:nrow(countrypair[[tp]])) {#
 	summary = summary(mcmc(angles[[tp]][i,]))[[2]][c(1,3, 5)]#
 	countrypair2[[tp]][i, ] =  c(summary, (summary[1] <= 1 & summary[3] >= 1)) #
 }#
 	countrypair[[tp]] = data.frame(countrypair[[tp]], countrypair2[[tp]])#
}
countrypair[[1]]
for(tp in 1:32) {#
	countrypair[[tp]] = countrypair[[tp]][,-c(1:3)]#
}
countrypair[[1]]
countrypair = list()
for (tp in 1:32) {#
	N = nrow(Unew[[tp]])#
	countrypair[[tp]] =  t(combn(rownames(Unew[[tp]]), 2))#
}
countrypair[[1]]
library(MCMCpack)#
countrypair2 = list()#
for (tp in 1:32) {#
	countrypair2[[tp]] = matrix(NA, nrow = nrow(countrypair[[tp]]), ncol = 4)#
 for (i in 1:nrow(countrypair[[tp]])) {#
 	summary = summary(mcmc(angles[[tp]][i,]))[[2]][c(1,3, 5)]#
 	countrypair2[[tp]][i, ] =  c(summary, (summary[1] <= 1 & summary[3] >= 1)) #
 }#
 	countrypair[[tp]] = data.frame(countrypair[[tp]], countrypair2[[tp]])#
}
countrypair[[1]]
for (tp in 1:32){#
	print(countrypair[[tp]][which(countrypair[[tp]][,6] == 1), 1:2])#
}
similar = list()#
for (tp in 1:32){#
	similar[[tp]] =countrypair[[tp]][which(countrypair[[tp]][,6] == 1), 1:2])#
}
similar = list()#
for (tp in 1:32){#
	similar[[tp]] =countrypair[[tp]][which(countrypair[[tp]][,6] == 1), 1:2]	#
}
similar[[1]]
similar[[32]]
save(angles, file = "angles.RData")
#full#
library(devtools)#
setwd('/Users/bomin8319/Desktop/DAME/pkg/R')#
load_all()#
load("/Users/bomin8319/Desktop/DAME/UNdatafull2.RData")#
attach(UNdatafull)#
library(FastGP)#
library(mvtnorm)#
library(fields)#
library(reshape)#
library(MCMCpack)#
library(expm)#
library(igraph)#
library(DLFM2)#
library(coda)#
library(ggplot2)#
library(gridExtra)#
ggplotColours <- function(n = 6, h = c(0, 360) + 15){#
  if ((diff(h) %% 360) < 1) h[2] <- h[2] - 360/n#
  hcl(h = (seq(h[1], h[2], length = n)), c = 100, l = 65)#
}#
number_ticks <- function(n) {function(limits) pretty(limits, n)}#
#
# 97 country version#
Time = 32#
N = 97#
#
# not existing countries -> all missing values imputed using model (biased)#
avail1 = matrix(1, Time, N)#
colnames(avail1) = colnames(UNdatafull$Y)#
avail1[1:8, which(colnames(avail1) %in% c("ROK", "PRK"))] =0 #North and South Korea did not joined UN voting until 1990#
avail1[1:9, which(colnames(avail1) %in% c("RUS"))] = 0 #RUS X variables not existed until 1991#
avail1[13:21, which(colnames(avail1) %in% c("IRQ"))] = 0 #IRQ under sanction
Degrees = vapply(1:Time, function(tp) {rowSums(Y[tp,,], na.rm = TRUE)}, rep(0, N))
corr = vapply(1:31, function(l) {cor(Degrees[1:(N*(Time - l))], Degrees[(1 + N*l):(N*Time)], use = "complete")}, 0)
load('~/Desktop/UN_full.RData')
load('~/Desktop/UN_full2.RData')#
load('~/Desktop/UN_full3.RData')#
load('~/Desktop/UN_full4.RData')
## side by side #
hi = factor(1983:2014)#
hello = list()#
hello2 = list()#
hello3 = list()#
hello4 = list()#
hellonew = list()#
mean = list()#
#
n2 = 1#
for	(n in 1:N){#
	hello[[n]] = matrix(NA, nrow = 0, ncol = 3)#
	mean[[n]] = matrix(NA, nrow = 0, ncol = 3)#
	for (d in 1:Time){#
	diag(Y[d,, ])= 0#
	Y[d, which(avail1[d,]==0), ] = 0#
	Y[d, , which(avail1[d,]==0)] = 0#
	hello[[n]]  = rbind(hello[[n]], cbind(UN$Degree[[d]][,n2]/ rowSums(UN$Degree[[d]]), rep(hi[d], length(UN$Degree[[d]][,n2])), rep("DAME", length(UN$Degree[[d]][,n2]))))#
	mean[[n]] = rbind(mean[[n]], c(rowSums(Y[d,,], na.rm=TRUE)[n2] / sum(Y[d,,], na.rm = TRUE), hi[d], "DAME"))#
}#
colnames(hello[[n]]) = c("Degree", "Year", "Model")#
hello[[n]] = as.data.frame(hello[[n]])#
hello[[n]]$Year = factor(sort(as.numeric(hello[[n]]$Year)), labels = c(1983:2014))#
#
	hello2[[n]] = matrix(NA, nrow = 0, ncol = 3)#
	for (d in 1:Time){#
	hello2[[n]]  = rbind(hello2[[n]], cbind(UN2$Degree[[d]][,n2]/ rowSums(UN2$Degree[[d]]), rep(hi[d], length(UN2$Degree[[d]][,n2])), rep("AE", length(UN2$Degree[[d]][,n2]))))#
	}#
colnames(hello2[[n]]) = c("Degree", "Year", "Model")#
hello2[[n]] = as.data.frame(hello2[[n]])#
hello2[[n]]$Year = factor(sort(as.numeric(hello2[[n]]$Year)), labels = c(1983:2014))#
#
hello3[[n]] = matrix(NA, nrow = 0, ncol = 3)#
	for (d in 1:Time){#
	hello3[[n]]  = rbind(hello3[[n]], cbind(UN3$Degree[[d]][,n2]/rowSums(UN3$Degree[[d]]), rep(hi[d], length(UN3$Degree[[d]][,n2])), rep("NO", length(UN3$Degree[[d]][,n2]))))#
	}#
colnames(hello3[[n]]) = c("Degree", "Year", "Model")#
hello3[[n]] = as.data.frame(hello3[[n]])#
hello3[[n]]$Year = factor(sort(as.numeric(hello3[[n]]$Year)), labels = c(1983:2014))#
#
hello4[[n]] = matrix(NA, nrow = 0, ncol = 3)#
	for (d in 1:Time){#
	hello4[[n]]  = rbind(hello4[[n]], cbind(UN4$Degree[[d]][,n2]/ rowSums(UN4$Degree[[d]]), rep(hi[d], length(UN4$Degree[[d]][,n2])), rep("ME", length(UN4$Degree[[d]][,n2]))))#
	}#
colnames(hello4[[n]]) = c("Degree", "Year", "Model")#
hello4[[n]] = as.data.frame(hello4[[n]])#
hello4[[n]]$Year = factor(sort(as.numeric(hello4[[n]]$Year)), labels = c(1983:2014))#
hellonew[[n]] = as.data.frame(rbind(hello[[n]], hello4[[n]], hello2[[n]], hello3[[n]]))#
colnames(mean[[n]]) =  c("Degree", "Year", "Model")#
mean[[n]] = as.data.frame(mean[[n]])#
n2 = n2 + 1#
}
countryname = (rownames(UN$U[[Time]]))#
countryname2 = (rownames(UN$U[[Time]]))#
#
setwd('/Users/bomin8319/Desktop/model_validation')#
countrynames = ggplotColours(4)#
p10 = list()#
n2 = 1#
for (n in 1:N){#
	hellonew[[n]]$Degree = as.numeric(as.character(hellonew[[n]]$Degree))#
	mean[[n]]$Degree = as.numeric(as.character(mean[[n]]$Degree))#
	mean[[n]]$Year = hi#
p10[[n]] = ggplot(hellonew[[n]], aes(x = Year, y = Degree, color= Model, fill =Model)) + geom_boxplot(outlier.size = 0.5, position = position_dodge()) + theme_minimal() +scale_fill_manual(values = alpha(countrynames,0.5), name = countryname[n])+scale_color_manual(values = countrynames,name = countryname[n]) + geom_line(data = mean[[n]], color = "blue", size = 0.2, group = 1)+geom_point(data = mean[[n]], color = "blue", size =2, group = 1)+guides(colour = guide_legend(override.aes = list(shape = NA))) + theme(legend.title = element_blank())#
#annotate("text", 30, 10, size = 5, label = countryname2[n], colour = countrynames[n])#
n2 = n2 + 1#
#
mname = paste0(countryname2[n], n, ".png")#
print(p10[[n]])#
#ggsave(filename = mname, width = 12, height = 6)#
}
setwd('/Users/bomin8319/Desktop/model_validation')#
countrynames = ggplotColours(4)#
p10 = list()#
n2 = 1#
for (n in 1:N){#
	hellonew[[n]]$Degree = as.numeric(as.character(hellonew[[n]]$Degree))#
	mean[[n]]$Degree = as.numeric(as.character(mean[[n]]$Degree))#
	mean[[n]]$Year = hi#
p10[[n]] = ggplot(hellonew[[n]], aes(x = Year, y = Degree, color= Model, fill =Model)) + geom_boxplot(outlier.size = 0.5, position = position_dodge()) + theme_minimal() +scale_fill_manual(values = alpha(countrynames,0.5), name = countryname[n])+scale_color_manual(values = countrynames,name = countryname[n]) + geom_line(data = mean[[n]], color = "blue", size = 0.2, group = 1)+geom_point(data = mean[[n]], color = "blue", size =2, group = 1)+guides(colour = guide_legend(override.aes = list(shape = NA))) + theme(legend.title = element_blank())#
#annotate("text", 30, 10, size = 5, label = countryname2[n], colour = countrynames[n])#
n2 = n2 + 1#
#
mname = paste0(countryname2[n], n, ".png")#
print(p10[[n]])#
ggsave(filename = mname, width = 12, height = 6)#
}
#seconddegree#
hi = factor(1983:2014)#
hello = list()#
hello2 = list()#
hello3 = list()#
hello4 = list()#
hellonew = list()#
mean = list()#
countrynames = sort(rownames(UN$U[[Time]]))#
#
n2 = 1#
for 	(n in 1:N){#
	hello[[n]] = matrix(NA, nrow = 0, ncol = 3)#
	mean[[n]] = matrix(NA, nrow = 0, ncol = 3)#
	for (d in 1:Time){#
	hello[[n]]  = rbind(hello[[n]], cbind(UN$secondDegree[[d]][,n2]/rowSums(UN$secondDegree[[d]]), rep(hi[d], length(UN$secondDegree[[d]][,n2])), rep("DAME", length(UN$secondDegree[[d]][,n2]))))#
	diag(Y[d,, ])= 0#
	Y[d, which(avail1[d,]==0), ] = 0#
	Y[d, , which(avail1[d,]==0)] = 0#
	mean[[n]] = rbind(mean[[n]], c(rowSums(Y[d,,] %*% Y[d,,], na.rm = TRUE)[n2], hi[d], "DAME"))#
}#
colnames(hello[[n]]) = c("SecondDegree", "Year", "Model")#
hello[[n]] = as.data.frame(hello[[n]])#
hello[[n]]$Year = factor(sort(as.numeric(hello[[n]]$Year)), labels = c(1983:2014))#
#
	hello2[[n]] = matrix(NA, nrow = 0, ncol = 3)#
	for (d in 1:Time){#
	hello2[[n]]  = rbind(hello2[[n]], cbind(UN2$secondDegree[[d]][,n2]/rowSums(UN2$secondDegree[[d]]), rep(hi[d], length(UN2$secondDegree[[d]][,n2])), rep("AE", length(UN2$secondDegree[[d]][,n2]))))#
	}#
colnames(hello2[[n]]) = c("SecondDegree", "Year", "Model")#
hello2[[n]] = as.data.frame(hello2[[n]])#
hello2[[n]]$Year = factor(sort(as.numeric(hello2[[n]]$Year)), labels = c(1983:2014))#
#
hello3[[n]] = matrix(NA, nrow = 0, ncol = 3)#
	for (d in 1:Time){#
	hello3[[n]]  = rbind(hello3[[n]], cbind(UN3$secondDegree[[d]][,n2]/rowSums(UN3$secondDegree[[d]]), rep(hi[d], length(UN3$secondDegree[[d]][,n2])), rep("NO", length(UN3$secondDegree[[d]][,n2]))))#
	}#
colnames(hello3[[n]]) = c("SecondDegree", "Year", "Model")#
hello3[[n]] = as.data.frame(hello3[[n]])#
hello3[[n]]$Year = factor(sort(as.numeric(hello3[[n]]$Year)), labels = c(1983:2014))#
#
hello4[[n]] = matrix(NA, nrow = 0, ncol = 3)#
	for (d in 1:Time){#
	hello4[[n]]  = rbind(hello4[[n]], cbind(UN4$secondDegree[[d]][,n2]/rowSums(UN4$secondDegree[[d]]), rep(hi[d], length(UN4$secondDegree[[d]][,n2])), rep("ME", length(UN4$secondDegree[[d]][,n2]))))#
	}#
colnames(hello4[[n]]) = c("SecondDegree", "Year", "Model")#
hello4[[n]] = as.data.frame(hello4[[n]])#
hello4[[n]]$Year = factor(sort(as.numeric(hello4[[n]]$Year)), labels = c(1983:2014))#
#
hellonew[[n]] = as.data.frame(rbind(hello[[n]],hello4[[n]], hello2[[n]], hello3[[n]]))#
colnames(mean[[n]]) =  c("SecondDegree", "Year", "Model")#
mean[[n]] = as.data.frame(mean[[n]])#
n2 = n2 + 1#
}#
#
countryname = (rownames(UN$U[[Time]]))#
countryname2 = (rownames(UN$U[[Time]]))#
ggplotColours <- function(n = 6, h = c(0, 360) + 15){#
  if ((diff(h) %% 360) < 1) h[2] <- h[2] - 360/n#
  hcl(h = (seq(h[1], h[2], length = n)), c = 100, l = 65)#
}#
countrynames = ggplotColours(4)#
p10 = list()#
n2 = 1#
for (n in 1:N){#
	hellonew[[n]]$SecondDegree = as.numeric(as.character(hellonew[[n]]$SecondDegree))#
	mean[[n]]$SecondDegree = as.numeric(as.character(mean[[n]]$SecondDegree))#
	mean[[n]]$Year = hi#
p10[[n]] = ggplot(hellonew[[n]], aes(x = Year, y = SecondDegree, color= Model, fill =Model)) + geom_boxplot(outlier.size = 0.5, position = position_dodge()) + theme_minimal() +scale_fill_manual(values = alpha(countrynames,0.5), name = countryname[n])+scale_color_manual(values = countrynames,name = countryname[n]) + geom_line(data = mean[[n]], color = "blue", size = 0.2, group = 1)+geom_point(data = mean[[n]], color = "blue", size =2, group = 1)+guides(colour = guide_legend(override.aes = list(shape = NA))) + theme(legend.title = element_blank())#
#
#annotate("text", 30, 10, size = 5, label = countryname2[n], colour = countrynames[n])#
n2 = n2 + 1#
#
mname = paste0(countryname2[n], n, "second.png")#
print(p10[[n]])#
ggsave(filename = mname, width = 12, height = 6)#
}#
#thirddegree#
hi = factor(1983:2014)#
hello = list()#
hello2 = list()#
hello3 = list()#
hello4 = list()#
hellonew = list()#
mean = list()#
countrynames = sort(rownames(UN$U[[Time]]))#
#
n2 = 1#
for 	(n in 1:N){#
	hello[[n]] = matrix(NA, nrow = 0, ncol = 3)#
	mean[[n]] = matrix(NA, nrow = 0, ncol = 3)#
	for (d in 1:Time){#
	hello[[n]]  = rbind(hello[[n]], cbind(UN$thirdDegree[[d]][,n2]/rowSums(UN$thirdDegree[[d]]), rep(hi[d], length(UN$thirdDegree[[d]][,n2])), rep("DAME", length(UN$thirdDegree[[d]][,n2]))))#
	diag(Y[d,, ])= 0#
	Y[d, which(avail1[d,]==0), ] = 0#
	Y[d, , which(avail1[d,]==0)] = 0#
	mean[[n]] = rbind(mean[[n]], c(rowSums(Y[d,,] %*% Y[d,,] %*% Y[d,,], na.rm = TRUE)[n2], hi[d], "DAME"))#
}#
colnames(hello[[n]]) = c("ThirdDegree", "Year", "Model")#
hello[[n]] = as.data.frame(hello[[n]])#
hello[[n]]$Year = factor(sort(as.numeric(hello[[n]]$Year)), labels = c(1983:2014))#
#
	hello2[[n]] = matrix(NA, nrow = 0, ncol = 3)#
	for (d in 1:Time){#
	hello2[[n]]  = rbind(hello2[[n]], cbind(UN2$thirdDegree[[d]][,n2]/rowSums(UN2$thirdDegree[[d]]), rep(hi[d], length(UN2$thirdDegree[[d]][,n2])), rep("AE", length(UN2$thirdDegree[[d]][,n2]))))#
	}#
colnames(hello2[[n]]) = c("ThirdDegree", "Year", "Model")#
hello2[[n]] = as.data.frame(hello2[[n]])#
hello2[[n]]$Year = factor(sort(as.numeric(hello2[[n]]$Year)), labels = c(1983:2014))#
#
hello3[[n]] = matrix(NA, nrow = 0, ncol = 3)#
	for (d in 1:Time){#
	hello3[[n]]  = rbind(hello3[[n]], cbind(UN3$thirdDegree[[d]][,n2]/rowSums(UN3$thirdDegree[[d]]), rep(hi[d], length(UN3$thirdDegree[[d]][,n2])), rep("NO", length(UN3$thirdDegree[[d]][,n2]))))#
	}#
colnames(hello3[[n]]) = c("ThirdDegree", "Year", "Model")#
hello3[[n]] = as.data.frame(hello3[[n]])#
hello3[[n]]$Year = factor(sort(as.numeric(hello3[[n]]$Year)), labels = c(1983:2014))#
hello4[[n]] = matrix(NA, nrow = 0, ncol = 3)#
	for (d in 1:Time){#
	hello4[[n]]  = rbind(hello4[[n]], cbind(UN4$thirdDegree[[d]][,n2]/rowSums(UN4$thirdDegree[[d]]), rep(hi[d], length(UN4$thirdDegree[[d]][,n2])), rep("ME", length(UN4$thirdDegree[[d]][,n2]))))#
	}#
colnames(hello4[[n]]) = c("ThirdDegree", "Year", "Model")#
hello4[[n]] = as.data.frame(hello4[[n]])#
hello4[[n]]$Year = factor(sort(as.numeric(hello4[[n]]$Year)), labels = c(1983:2014))#
hellonew[[n]] = as.data.frame(rbind(hello[[n]], hello4[[n]], hello2[[n]], hello3[[n]]))#
colnames(mean[[n]]) =  c("ThirdDegree", "Year", "Model")#
mean[[n]] = as.data.frame(mean[[n]])#
n2 = n2 + 1#
}#
#
countryname = (rownames(UN$U[[Time]]))#
countryname2 = (rownames(UN$U[[Time]]))#
ggplotColours <- function(n = 6, h = c(0, 360) + 15){#
  if ((diff(h) %% 360) < 1) h[2] <- h[2] - 360/n#
  hcl(h = (seq(h[1], h[2], length = n)), c = 100, l = 65)#
}#
countrynames = ggplotColours(4)#
p10 = list()#
n2 = 1#
for (n in 1:N){#
	hellonew[[n]]$ThirdDegree = as.numeric(as.character(hellonew[[n]]$ThirdDegree))#
	mean[[n]]$ThirdDegree = as.numeric(as.character(mean[[n]]$ThirdDegree))#
	mean[[n]]$Year = hi#
p10[[n]] = ggplot(hellonew[[n]], aes(x = Year, y = ThirdDegree, color= Model, fill =Model)) + geom_boxplot(outlier.size = 0.5, position = position_dodge()) + theme_minimal() +scale_fill_manual(values = alpha(countrynames,0.5), name = countryname[n])+scale_color_manual(values = countrynames,name = countryname[n]) +  geom_line(data = mean[[n]], color = "blue", size = 0.2, group = 1)+geom_point(data = mean[[n]], color = "blue", size =2, group = 1)+guides(colour = guide_legend(override.aes = list(shape = NA))) + theme(legend.title = element_blank())#
#
#annotate("text", 30, 10, size = 5, label = countryname2[n], colour = countrynames[n])#
n2 = n2 + 1#
#
mname = paste0(countryname2[n], n, "third.png")#
print(p10[[n]])#
ggsave(filename = mname, width = 12, height = 6)#
}
UN$secondDegree[[d]][,n2]
UN$secondDegree[[d]][,n2]/rowSums(UN$secondDegree[[d]])
#seconddegree#
hi = factor(1983:2014)#
hello = list()#
hello2 = list()#
hello3 = list()#
hello4 = list()#
hellonew = list()#
mean = list()#
countrynames = sort(rownames(UN$U[[Time]]))#
#
n2 = 1#
for 	(n in 1:N){#
	hello[[n]] = matrix(NA, nrow = 0, ncol = 3)#
	mean[[n]] = matrix(NA, nrow = 0, ncol = 3)#
	for (d in 1:Time){#
	hello[[n]]  = rbind(hello[[n]], cbind(UN$secondDegree[[d]][,n2]/rowSums(UN$secondDegree[[d]]), rep(hi[d], length(UN$secondDegree[[d]][,n2])), rep("DAME", length(UN$secondDegree[[d]][,n2]))))#
	diag(Y[d,, ])= 0#
	Y[d, which(avail1[d,]==0), ] = 0#
	Y[d, , which(avail1[d,]==0)] = 0#
	mean[[n]] = rbind(mean[[n]], c(rowSums(Y[d,,] %*% Y[d,,], na.rm = TRUE)[n2], hi[d], "DAME"))#
}#
colnames(hello[[n]]) = c("SecondDegree", "Year", "Model")#
hello[[n]] = as.data.frame(hello[[n]])#
hello[[n]]$Year = factor(sort(as.numeric(hello[[n]]$Year)), labels = c(1983:2014))#
#
	hello2[[n]] = matrix(NA, nrow = 0, ncol = 3)#
	for (d in 1:Time){#
	hello2[[n]]  = rbind(hello2[[n]], cbind(UN2$secondDegree[[d]][,n2]/rowSums(UN2$secondDegree[[d]]), rep(hi[d], length(UN2$secondDegree[[d]][,n2])), rep("AE", length(UN2$secondDegree[[d]][,n2]))))#
	}#
colnames(hello2[[n]]) = c("SecondDegree", "Year", "Model")#
hello2[[n]] = as.data.frame(hello2[[n]])#
hello2[[n]]$Year = factor(sort(as.numeric(hello2[[n]]$Year)), labels = c(1983:2014))#
#
hello3[[n]] = matrix(NA, nrow = 0, ncol = 3)#
	for (d in 1:Time){#
	hello3[[n]]  = rbind(hello3[[n]], cbind(UN3$secondDegree[[d]][,n2]/rowSums(UN3$secondDegree[[d]]), rep(hi[d], length(UN3$secondDegree[[d]][,n2])), rep("NO", length(UN3$secondDegree[[d]][,n2]))))#
	}#
colnames(hello3[[n]]) = c("SecondDegree", "Year", "Model")#
hello3[[n]] = as.data.frame(hello3[[n]])#
hello3[[n]]$Year = factor(sort(as.numeric(hello3[[n]]$Year)), labels = c(1983:2014))#
#
hello4[[n]] = matrix(NA, nrow = 0, ncol = 3)#
	for (d in 1:Time){#
	hello4[[n]]  = rbind(hello4[[n]], cbind(UN4$secondDegree[[d]][,n2]/rowSums(UN4$secondDegree[[d]]), rep(hi[d], length(UN4$secondDegree[[d]][,n2])), rep("ME", length(UN4$secondDegree[[d]][,n2]))))#
	}#
colnames(hello4[[n]]) = c("SecondDegree", "Year", "Model")#
hello4[[n]] = as.data.frame(hello4[[n]])#
hello4[[n]]$Year = factor(sort(as.numeric(hello4[[n]]$Year)), labels = c(1983:2014))#
#
hellonew[[n]] = as.data.frame(rbind(hello[[n]],hello4[[n]], hello2[[n]], hello3[[n]]))#
colnames(mean[[n]]) =  c("SecondDegree", "Year", "Model")#
mean[[n]] = as.data.frame(mean[[n]])#
n2 = n2 + 1#
}
hellownew[[1]]
head(hellonew[[1]])
countryname = (rownames(UN$U[[Time]]))#
countryname2 = (rownames(UN$U[[Time]]))#
ggplotColours <- function(n = 6, h = c(0, 360) + 15){#
  if ((diff(h) %% 360) < 1) h[2] <- h[2] - 360/n#
  hcl(h = (seq(h[1], h[2], length = n)), c = 100, l = 65)#
}#
countrynames = ggplotColours(4)#
p10 = list()#
n2 = 1#
for (n in 1:N){#
	hellonew[[n]]$SecondDegree = as.numeric(as.character(hellonew[[n]]$SecondDegree))#
	mean[[n]]$SecondDegree = as.numeric(as.character(mean[[n]]$SecondDegree))#
	mean[[n]]$Year = hi#
p10[[n]] = ggplot(hellonew[[n]], aes(x = Year, y = SecondDegree, color= Model, fill =Model)) + geom_boxplot(outlier.size = 0.5, position = position_dodge()) + theme_minimal() +scale_fill_manual(values = alpha(countrynames,0.5), name = countryname[n])+scale_color_manual(values = countrynames,name = countryname[n]) + geom_line(data = mean[[n]], color = "blue", size = 0.2, group = 1)+geom_point(data = mean[[n]], color = "blue", size =2, group = 1)+guides(colour = guide_legend(override.aes = list(shape = NA))) + theme(legend.title = element_blank())#
#
#annotate("text", 30, 10, size = 5, label = countryname2[n], colour = countrynames[n])#
n2 = n2 + 1#
#
mname = paste0(countryname2[n], n, "second.png")#
print(p10[[n]])#
#ggsave(filename = mname, width = 12, height = 6)#
}
#seconddegree#
hi = factor(1983:2014)#
hello = list()#
hello2 = list()#
hello3 = list()#
hello4 = list()#
hellonew = list()#
mean = list()#
countrynames = sort(rownames(UN$U[[Time]]))#
#
n2 = 1#
for 	(n in 1:N){#
	hello[[n]] = matrix(NA, nrow = 0, ncol = 3)#
	mean[[n]] = matrix(NA, nrow = 0, ncol = 3)#
	for (d in 1:Time){#
	hello[[n]]  = rbind(hello[[n]], cbind(UN$secondDegree[[d]][,n2]/rowSums(UN$secondDegree[[d]]), rep(hi[d], length(UN$secondDegree[[d]][,n2])), rep("DAME", length(UN$secondDegree[[d]][,n2]))))#
	diag(Y[d,, ])= 0#
	Y[d, which(avail1[d,]==0), ] = 0#
	Y[d, , which(avail1[d,]==0)] = 0#
	mean[[n]] = rbind(mean[[n]], c(rowSums(Y[d,,] %*% Y[d,,], na.rm = TRUE)[n2]/ sum(Y[d,,] %*% Y[d,,], na.rm = TRUE), hi[d], "DAME"))#
}#
colnames(hello[[n]]) = c("SecondDegree", "Year", "Model")#
hello[[n]] = as.data.frame(hello[[n]])#
hello[[n]]$Year = factor(sort(as.numeric(hello[[n]]$Year)), labels = c(1983:2014))#
#
	hello2[[n]] = matrix(NA, nrow = 0, ncol = 3)#
	for (d in 1:Time){#
	hello2[[n]]  = rbind(hello2[[n]], cbind(UN2$secondDegree[[d]][,n2]/rowSums(UN2$secondDegree[[d]]), rep(hi[d], length(UN2$secondDegree[[d]][,n2])), rep("AE", length(UN2$secondDegree[[d]][,n2]))))#
	}#
colnames(hello2[[n]]) = c("SecondDegree", "Year", "Model")#
hello2[[n]] = as.data.frame(hello2[[n]])#
hello2[[n]]$Year = factor(sort(as.numeric(hello2[[n]]$Year)), labels = c(1983:2014))#
#
hello3[[n]] = matrix(NA, nrow = 0, ncol = 3)#
	for (d in 1:Time){#
	hello3[[n]]  = rbind(hello3[[n]], cbind(UN3$secondDegree[[d]][,n2]/rowSums(UN3$secondDegree[[d]]), rep(hi[d], length(UN3$secondDegree[[d]][,n2])), rep("NO", length(UN3$secondDegree[[d]][,n2]))))#
	}#
colnames(hello3[[n]]) = c("SecondDegree", "Year", "Model")#
hello3[[n]] = as.data.frame(hello3[[n]])#
hello3[[n]]$Year = factor(sort(as.numeric(hello3[[n]]$Year)), labels = c(1983:2014))#
#
hello4[[n]] = matrix(NA, nrow = 0, ncol = 3)#
	for (d in 1:Time){#
	hello4[[n]]  = rbind(hello4[[n]], cbind(UN4$secondDegree[[d]][,n2]/rowSums(UN4$secondDegree[[d]]), rep(hi[d], length(UN4$secondDegree[[d]][,n2])), rep("ME", length(UN4$secondDegree[[d]][,n2]))))#
	}#
colnames(hello4[[n]]) = c("SecondDegree", "Year", "Model")#
hello4[[n]] = as.data.frame(hello4[[n]])#
hello4[[n]]$Year = factor(sort(as.numeric(hello4[[n]]$Year)), labels = c(1983:2014))#
#
hellonew[[n]] = as.data.frame(rbind(hello[[n]],hello4[[n]], hello2[[n]], hello3[[n]]))#
colnames(mean[[n]]) =  c("SecondDegree", "Year", "Model")#
mean[[n]] = as.data.frame(mean[[n]])#
n2 = n2 + 1#
}#
#
countryname = (rownames(UN$U[[Time]]))#
countryname2 = (rownames(UN$U[[Time]]))#
ggplotColours <- function(n = 6, h = c(0, 360) + 15){#
  if ((diff(h) %% 360) < 1) h[2] <- h[2] - 360/n#
  hcl(h = (seq(h[1], h[2], length = n)), c = 100, l = 65)#
}#
countrynames = ggplotColours(4)#
p10 = list()#
n2 = 1#
for (n in 1:N){#
	hellonew[[n]]$SecondDegree = as.numeric(as.character(hellonew[[n]]$SecondDegree))#
	mean[[n]]$SecondDegree = as.numeric(as.character(mean[[n]]$SecondDegree))#
	mean[[n]]$Year = hi#
p10[[n]] = ggplot(hellonew[[n]], aes(x = Year, y = SecondDegree, color= Model, fill =Model)) + geom_boxplot(outlier.size = 0.5, position = position_dodge()) + theme_minimal() +scale_fill_manual(values = alpha(countrynames,0.5), name = countryname[n])+scale_color_manual(values = countrynames,name = countryname[n]) + geom_line(data = mean[[n]], color = "blue", size = 0.2, group = 1)+geom_point(data = mean[[n]], color = "blue", size =2, group = 1)+guides(colour = guide_legend(override.aes = list(shape = NA))) + theme(legend.title = element_blank())#
#
#annotate("text", 30, 10, size = 5, label = countryname2[n], colour = countrynames[n])#
n2 = n2 + 1#
#
mname = paste0(countryname2[n], n, "second.png")#
print(p10[[n]])#
#ggsave(filename = mname, width = 12, height = 6)#
}
warnings()
head(hellonew[[10]])
sum(Y[d,,] %*% Y[d,,], na.rm = TRUE)
sum(Y[1,,] %*% Y[1,,], na.rm = TRUE)
sapply(1:32, function(x) sum(Y[x,,] %*% Y[x,,], na.rm = TRUE))
Y[12,,]
which(is.na(Y[d,1]))
which(is.na(Y[d,,1]))
d
which(is.na(Y[12,,1]))
n2 = 1#
for 	(n in 1:N){#
	hello[[n]] = matrix(NA, nrow = 0, ncol = 3)#
	mean[[n]] = matrix(NA, nrow = 0, ncol = 3)#
	for (d in 1:Time){#
	hello[[n]]  = rbind(hello[[n]], cbind(UN$secondDegree[[d]][,n2]/rowSums(UN$secondDegree[[d]]), rep(hi[d], length(UN$secondDegree[[d]][,n2])), rep("DAME", length(UN$secondDegree[[d]][,n2]))))#
	diag(Y[d,, ])= 0#
	Y[d, which(avail1[d,]==0), ] = 0#
	Y[d, , which(avail1[d,]==0)] = 0#
	Y[d, which(is.na(Y[d,,1])), ] = 0#
	Y[d, ,which(is.na(Y[d,,1]))] = 0#
	mean[[n]] = rbind(mean[[n]], c(rowSums(Y[d,,] %*% Y[d,,], na.rm = TRUE)[n2]/ sum(Y[d,,] %*% Y[d,,], na.rm = TRUE), hi[d], "DAME"))#
}#
colnames(hello[[n]]) = c("SecondDegree", "Year", "Model")#
hello[[n]] = as.data.frame(hello[[n]])#
hello[[n]]$Year = factor(sort(as.numeric(hello[[n]]$Year)), labels = c(1983:2014))#
#
	hello2[[n]] = matrix(NA, nrow = 0, ncol = 3)#
	for (d in 1:Time){#
	hello2[[n]]  = rbind(hello2[[n]], cbind(UN2$secondDegree[[d]][,n2]/rowSums(UN2$secondDegree[[d]]), rep(hi[d], length(UN2$secondDegree[[d]][,n2])), rep("AE", length(UN2$secondDegree[[d]][,n2]))))#
	}#
colnames(hello2[[n]]) = c("SecondDegree", "Year", "Model")#
hello2[[n]] = as.data.frame(hello2[[n]])#
hello2[[n]]$Year = factor(sort(as.numeric(hello2[[n]]$Year)), labels = c(1983:2014))#
#
hello3[[n]] = matrix(NA, nrow = 0, ncol = 3)#
	for (d in 1:Time){#
	hello3[[n]]  = rbind(hello3[[n]], cbind(UN3$secondDegree[[d]][,n2]/rowSums(UN3$secondDegree[[d]]), rep(hi[d], length(UN3$secondDegree[[d]][,n2])), rep("NO", length(UN3$secondDegree[[d]][,n2]))))#
	}#
colnames(hello3[[n]]) = c("SecondDegree", "Year", "Model")#
hello3[[n]] = as.data.frame(hello3[[n]])#
hello3[[n]]$Year = factor(sort(as.numeric(hello3[[n]]$Year)), labels = c(1983:2014))#
#
hello4[[n]] = matrix(NA, nrow = 0, ncol = 3)#
	for (d in 1:Time){#
	hello4[[n]]  = rbind(hello4[[n]], cbind(UN4$secondDegree[[d]][,n2]/rowSums(UN4$secondDegree[[d]]), rep(hi[d], length(UN4$secondDegree[[d]][,n2])), rep("ME", length(UN4$secondDegree[[d]][,n2]))))#
	}#
colnames(hello4[[n]]) = c("SecondDegree", "Year", "Model")#
hello4[[n]] = as.data.frame(hello4[[n]])#
hello4[[n]]$Year = factor(sort(as.numeric(hello4[[n]]$Year)), labels = c(1983:2014))#
#
hellonew[[n]] = as.data.frame(rbind(hello[[n]],hello4[[n]], hello2[[n]], hello3[[n]]))#
colnames(mean[[n]]) =  c("SecondDegree", "Year", "Model")#
mean[[n]] = as.data.frame(mean[[n]])#
n2 = n2 + 1#
}#
#
countryname = (rownames(UN$U[[Time]]))#
countryname2 = (rownames(UN$U[[Time]]))#
ggplotColours <- function(n = 6, h = c(0, 360) + 15){#
  if ((diff(h) %% 360) < 1) h[2] <- h[2] - 360/n#
  hcl(h = (seq(h[1], h[2], length = n)), c = 100, l = 65)#
}#
countrynames = ggplotColours(4)#
p10 = list()#
n2 = 1#
for (n in 1:N){#
	hellonew[[n]]$SecondDegree = as.numeric(as.character(hellonew[[n]]$SecondDegree))#
	mean[[n]]$SecondDegree = as.numeric(as.character(mean[[n]]$SecondDegree))#
	mean[[n]]$Year = hi#
p10[[n]] = ggplot(hellonew[[n]], aes(x = Year, y = SecondDegree, color= Model, fill =Model)) + geom_boxplot(outlier.size = 0.5, position = position_dodge()) + theme_minimal() +scale_fill_manual(values = alpha(countrynames,0.5), name = countryname[n])+scale_color_manual(values = countrynames,name = countryname[n]) + geom_line(data = mean[[n]], color = "blue", size = 0.2, group = 1)+geom_point(data = mean[[n]], color = "blue", size =2, group = 1)+guides(colour = guide_legend(override.aes = list(shape = NA))) + theme(legend.title = element_blank())#
#
#annotate("text", 30, 10, size = 5, label = countryname2[n], colour = countrynames[n])#
n2 = n2 + 1#
#
mname = paste0(countryname2[n], n, "second.png")#
print(p10[[n]])#
#ggsave(filename = mname, width = 12, height = 6)#
}
rowSums(Y[d,,] %*% Y[d,,], na.rm = TRUE)
sum(Y[d,,] %*% Y[d,,], na.rm = TRUE)
sapply(1:32, function(x) sum(Y[x,,] %*% Y[x,,], na.rm = TRUE))
d = 12
UN$secondDegree[[d]][,n2]
n2
UN$secondDegree[[d]][,n2]/rowSums(UN$secondDegree[[d]])
rowSums(UN$secondDegree[[d]])
UN$secondDegree[[d]][,n2
]
d = 12
Y[d,,]
Y[d,,] %*% Y[d,,]
which(is.na(Y[d,,1]))
which(is.na(Y[d,1,]))
#seconddegree#
hi = factor(1983:2014)#
hello = list()#
hello2 = list()#
hello3 = list()#
hello4 = list()#
hellonew = list()#
mean = list()#
countrynames = sort(rownames(UN$U[[Time]]))#
#
n2 = 1#
for 	(n in 1:N){#
	hello[[n]] = matrix(NA, nrow = 0, ncol = 3)#
	mean[[n]] = matrix(NA, nrow = 0, ncol = 3)#
	for (d in 1:Time){#
	hello[[n]]  = rbind(hello[[n]], cbind(UN$secondDegree[[d]][,n2]/rowSums(UN$secondDegree[[d]]), rep(hi[d], length(UN$secondDegree[[d]][,n2])), rep("DAME", length(UN$secondDegree[[d]][,n2]))))#
	diag(Y[d,, ])= 0#
	Y[d, which(avail1[d,]==0), ] = 0#
	Y[d, , which(avail1[d,]==0)] = 0#
	Y[d, which(is.na(Y[d,,1])), ] = 0#
	Y[d, ,which(is.na(Y[d,1,]))] = 0#
	mean[[n]] = rbind(mean[[n]], c(rowSums(Y[d,,] %*% Y[d,,], na.rm = TRUE)[n2]/ sum(Y[d,,] %*% Y[d,,], na.rm = TRUE), hi[d], "DAME"))#
}#
colnames(hello[[n]]) = c("SecondDegree", "Year", "Model")#
hello[[n]] = as.data.frame(hello[[n]])#
hello[[n]]$Year = factor(sort(as.numeric(hello[[n]]$Year)), labels = c(1983:2014))#
#
	hello2[[n]] = matrix(NA, nrow = 0, ncol = 3)#
	for (d in 1:Time){#
	hello2[[n]]  = rbind(hello2[[n]], cbind(UN2$secondDegree[[d]][,n2]/rowSums(UN2$secondDegree[[d]]), rep(hi[d], length(UN2$secondDegree[[d]][,n2])), rep("AE", length(UN2$secondDegree[[d]][,n2]))))#
	}#
colnames(hello2[[n]]) = c("SecondDegree", "Year", "Model")#
hello2[[n]] = as.data.frame(hello2[[n]])#
hello2[[n]]$Year = factor(sort(as.numeric(hello2[[n]]$Year)), labels = c(1983:2014))#
#
hello3[[n]] = matrix(NA, nrow = 0, ncol = 3)#
	for (d in 1:Time){#
	hello3[[n]]  = rbind(hello3[[n]], cbind(UN3$secondDegree[[d]][,n2]/rowSums(UN3$secondDegree[[d]]), rep(hi[d], length(UN3$secondDegree[[d]][,n2])), rep("NO", length(UN3$secondDegree[[d]][,n2]))))#
	}#
colnames(hello3[[n]]) = c("SecondDegree", "Year", "Model")#
hello3[[n]] = as.data.frame(hello3[[n]])#
hello3[[n]]$Year = factor(sort(as.numeric(hello3[[n]]$Year)), labels = c(1983:2014))#
#
hello4[[n]] = matrix(NA, nrow = 0, ncol = 3)#
	for (d in 1:Time){#
	hello4[[n]]  = rbind(hello4[[n]], cbind(UN4$secondDegree[[d]][,n2]/rowSums(UN4$secondDegree[[d]]), rep(hi[d], length(UN4$secondDegree[[d]][,n2])), rep("ME", length(UN4$secondDegree[[d]][,n2]))))#
	}#
colnames(hello4[[n]]) = c("SecondDegree", "Year", "Model")#
hello4[[n]] = as.data.frame(hello4[[n]])#
hello4[[n]]$Year = factor(sort(as.numeric(hello4[[n]]$Year)), labels = c(1983:2014))#
#
hellonew[[n]] = as.data.frame(rbind(hello[[n]],hello4[[n]], hello2[[n]], hello3[[n]]))#
colnames(mean[[n]]) =  c("SecondDegree", "Year", "Model")#
mean[[n]] = as.data.frame(mean[[n]])#
n2 = n2 + 1#
}#
#
countryname = (rownames(UN$U[[Time]]))#
countryname2 = (rownames(UN$U[[Time]]))#
ggplotColours <- function(n = 6, h = c(0, 360) + 15){#
  if ((diff(h) %% 360) < 1) h[2] <- h[2] - 360/n#
  hcl(h = (seq(h[1], h[2], length = n)), c = 100, l = 65)#
}#
countrynames = ggplotColours(4)#
p10 = list()#
n2 = 1#
for (n in 1:N){#
	hellonew[[n]]$SecondDegree = as.numeric(as.character(hellonew[[n]]$SecondDegree))#
	mean[[n]]$SecondDegree = as.numeric(as.character(mean[[n]]$SecondDegree))#
	mean[[n]]$Year = hi#
p10[[n]] = ggplot(hellonew[[n]], aes(x = Year, y = SecondDegree, color= Model, fill =Model)) + geom_boxplot(outlier.size = 0.5, position = position_dodge()) + theme_minimal() +scale_fill_manual(values = alpha(countrynames,0.5), name = countryname[n])+scale_color_manual(values = countrynames,name = countryname[n]) + geom_line(data = mean[[n]], color = "blue", size = 0.2, group = 1)+geom_point(data = mean[[n]], color = "blue", size =2, group = 1)+guides(colour = guide_legend(override.aes = list(shape = NA))) + theme(legend.title = element_blank())#
#
#annotate("text", 30, 10, size = 5, label = countryname2[n], colour = countrynames[n])#
n2 = n2 + 1#
#
mname = paste0(countryname2[n], n, "second.png")#
print(p10[[n]])#
#ggsave(filename = mname, width = 12, height = 6)#
}
warnings()
sapply(1:32, function(x) sum(Y[x,,] %*% Y[x,,], na.rm = TRUE))
#full#
library(devtools)#
setwd('/Users/bomin8319/Desktop/DAME/pkg/R')#
load_all()#
load("/Users/bomin8319/Desktop/DAME/UNdatafull2.RData")#
attach(UNdatafull)#
library(FastGP)#
library(mvtnorm)#
library(fields)#
library(reshape)#
library(MCMCpack)#
library(expm)#
library(igraph)#
library(DLFM2)#
library(coda)#
library(ggplot2)#
library(gridExtra)#
ggplotColours <- function(n = 6, h = c(0, 360) + 15){#
  if ((diff(h) %% 360) < 1) h[2] <- h[2] - 360/n#
  hcl(h = (seq(h[1], h[2], length = n)), c = 100, l = 65)#
}#
number_ticks <- function(n) {function(limits) pretty(limits, n)}#
#
# 97 country version#
Time = 32#
N = 97#
#
# not existing countries -> all missing values imputed using model (biased)#
avail1 = matrix(1, Time, N)#
colnames(avail1) = colnames(UNdatafull$Y)#
avail1[1:8, which(colnames(avail1) %in% c("ROK", "PRK"))] =0 #North and South Korea did not joined UN voting until 1990#
avail1[1:9, which(colnames(avail1) %in% c("RUS"))] = 0 #RUS X variables not existed until 1991#
avail1[13:21, which(colnames(avail1) %in% c("IRQ"))] = 0 #IRQ under sanction#
#
#avail1[9:14, which(colnames(avail1) %in% c("IRQ"))] = 0 #Under the rule of Saddam, economic data were considered state secrets; thus, reliable data for the era was limited. (From 1990 until Saddam accepted the terms and conditions of UN Resolution 986 in 1996 the GDP in Iraq remained at less than 30 percent of the 1989 value.)#
#
Degrees = vapply(1:Time, function(tp) {rowSums(Y[tp,,], na.rm = TRUE)}, rep(0, N))#
corr = vapply(1:31, function(l) {cor(Degrees[1:(N*(Time - l))], Degrees[(1 + N*l):(N*Time)], use = "complete")}, 0)
sapply(1:32, function(x) sum(Y[x,,] %*% Y[x,,], na.rm = TRUE))
Y[1,,]
Y[12,,]
rm(list=ls())
#full#
library(devtools)#
setwd('/Users/bomin8319/Desktop/DAME/pkg/R')#
load_all()#
load("/Users/bomin8319/Desktop/DAME/UNdatafull2.RData")#
attach(UNdatafull)#
library(FastGP)#
library(mvtnorm)#
library(fields)#
library(reshape)#
library(MCMCpack)#
library(expm)#
library(igraph)#
library(DLFM2)#
library(coda)#
library(ggplot2)#
library(gridExtra)#
ggplotColours <- function(n = 6, h = c(0, 360) + 15){#
  if ((diff(h) %% 360) < 1) h[2] <- h[2] - 360/n#
  hcl(h = (seq(h[1], h[2], length = n)), c = 100, l = 65)#
}#
number_ticks <- function(n) {function(limits) pretty(limits, n)}#
#
# 97 country version#
Time = 32#
N = 97#
#
# not existing countries -> all missing values imputed using model (biased)#
avail1 = matrix(1, Time, N)#
colnames(avail1) = colnames(UNdatafull$Y)#
avail1[1:8, which(colnames(avail1) %in% c("ROK", "PRK"))] =0 #North and South Korea did not joined UN voting until 1990#
avail1[1:9, which(colnames(avail1) %in% c("RUS"))] = 0 #RUS X variables not existed until 1991#
avail1[13:21, which(colnames(avail1) %in% c("IRQ"))] = 0 #IRQ under sanction#
#
#avail1[9:14, which(colnames(avail1) %in% c("IRQ"))] = 0 #Under the rule of Saddam, economic data were considered state secrets; thus, reliable data for the era was limited. (From 1990 until Saddam accepted the terms and conditions of UN Resolution 986 in 1996 the GDP in Iraq remained at less than 30 percent of the 1989 value.)#
#
Degrees = vapply(1:Time, function(tp) {rowSums(Y[tp,,], na.rm = TRUE)}, rep(0, N))#
corr = vapply(1:31, function(l) {cor(Degrees[1:(N*(Time - l))], Degrees[(1 + N*l):(N*Time)], use = "complete")}, 0)
load('~/Desktop/UN_full4.RData')#
load('~/Desktop/UN_full.RData')#
load('~/Desktop/UN_full2.RData')#
load('~/Desktop/UN_full3.RData')
hi = factor(1983:2014)#
hello = list()#
hello2 = list()#
hello3 = list()#
hello4 = list()#
hellonew = list()#
mean = list()#
countrynames = sort(rownames(UN$U[[Time]]))#
#
n2 = 1#
for 	(n in 1:N){#
	hello[[n]] = matrix(NA, nrow = 0, ncol = 3)#
	mean[[n]] = matrix(NA, nrow = 0, ncol = 3)#
	for (d in 1:Time){#
	hello[[n]]  = rbind(hello[[n]], cbind(UN$secondDegree[[d]][,n2]/rowSums(UN$secondDegree[[d]]), rep(hi[d], length(UN$secondDegree[[d]][,n2])), rep("DAME", length(UN$secondDegree[[d]][,n2]))))#
	diag(Y[d,, ])= 0#
	Y[d, which(avail1[d,]==0), ] = 0#
	Y[d, , which(avail1[d,]==0)] = 0#
	Y[d, which(is.na(Y[d,,1])), ] = 0#
	Y[d, ,which(is.na(Y[d,1,]))] = 0#
	mean[[n]] = rbind(mean[[n]], c(rowSums(Y[d,,] %*% Y[d,,], na.rm = TRUE)[n2]/ sum(Y[d,,] %*% Y[d,,], na.rm = TRUE), hi[d], "DAME"))#
}#
colnames(hello[[n]]) = c("SecondDegree", "Year", "Model")#
hello[[n]] = as.data.frame(hello[[n]])#
hello[[n]]$Year = factor(sort(as.numeric(hello[[n]]$Year)), labels = c(1983:2014))#
#
	hello2[[n]] = matrix(NA, nrow = 0, ncol = 3)#
	for (d in 1:Time){#
	hello2[[n]]  = rbind(hello2[[n]], cbind(UN2$secondDegree[[d]][,n2]/rowSums(UN2$secondDegree[[d]]), rep(hi[d], length(UN2$secondDegree[[d]][,n2])), rep("AE", length(UN2$secondDegree[[d]][,n2]))))#
	}#
colnames(hello2[[n]]) = c("SecondDegree", "Year", "Model")#
hello2[[n]] = as.data.frame(hello2[[n]])#
hello2[[n]]$Year = factor(sort(as.numeric(hello2[[n]]$Year)), labels = c(1983:2014))#
#
hello3[[n]] = matrix(NA, nrow = 0, ncol = 3)#
	for (d in 1:Time){#
	hello3[[n]]  = rbind(hello3[[n]], cbind(UN3$secondDegree[[d]][,n2]/rowSums(UN3$secondDegree[[d]]), rep(hi[d], length(UN3$secondDegree[[d]][,n2])), rep("NO", length(UN3$secondDegree[[d]][,n2]))))#
	}#
colnames(hello3[[n]]) = c("SecondDegree", "Year", "Model")#
hello3[[n]] = as.data.frame(hello3[[n]])#
hello3[[n]]$Year = factor(sort(as.numeric(hello3[[n]]$Year)), labels = c(1983:2014))#
#
hello4[[n]] = matrix(NA, nrow = 0, ncol = 3)#
	for (d in 1:Time){#
	hello4[[n]]  = rbind(hello4[[n]], cbind(UN4$secondDegree[[d]][,n2]/rowSums(UN4$secondDegree[[d]]), rep(hi[d], length(UN4$secondDegree[[d]][,n2])), rep("ME", length(UN4$secondDegree[[d]][,n2]))))#
	}#
colnames(hello4[[n]]) = c("SecondDegree", "Year", "Model")#
hello4[[n]] = as.data.frame(hello4[[n]])#
hello4[[n]]$Year = factor(sort(as.numeric(hello4[[n]]$Year)), labels = c(1983:2014))#
#
hellonew[[n]] = as.data.frame(rbind(hello[[n]],hello4[[n]], hello2[[n]], hello3[[n]]))#
colnames(mean[[n]]) =  c("SecondDegree", "Year", "Model")#
mean[[n]] = as.data.frame(mean[[n]])#
n2 = n2 + 1#
}#
#
countryname = (rownames(UN$U[[Time]]))#
countryname2 = (rownames(UN$U[[Time]]))#
ggplotColours <- function(n = 6, h = c(0, 360) + 15){#
  if ((diff(h) %% 360) < 1) h[2] <- h[2] - 360/n#
  hcl(h = (seq(h[1], h[2], length = n)), c = 100, l = 65)#
}#
countrynames = ggplotColours(4)#
p10 = list()#
n2 = 1#
for (n in 1:N){#
	hellonew[[n]]$SecondDegree = as.numeric(as.character(hellonew[[n]]$SecondDegree))#
	mean[[n]]$SecondDegree = as.numeric(as.character(mean[[n]]$SecondDegree))#
	mean[[n]]$Year = hi#
p10[[n]] = ggplot(hellonew[[n]], aes(x = Year, y = SecondDegree, color= Model, fill =Model)) + geom_boxplot(outlier.size = 0.5, position = position_dodge()) + theme_minimal() +scale_fill_manual(values = alpha(countrynames,0.5), name = countryname[n])+scale_color_manual(values = countrynames,name = countryname[n]) + geom_line(data = mean[[n]], color = "blue", size = 0.2, group = 1)+geom_point(data = mean[[n]], color = "blue", size =2, group = 1)+guides(colour = guide_legend(override.aes = list(shape = NA))) + theme(legend.title = element_blank())#
#
#annotate("text", 30, 10, size = 5, label = countryname2[n], colour = countrynames[n])#
n2 = n2 + 1#
#
mname = paste0(countryname2[n], n, "second.png")#
print(p10[[n]])#
#ggsave(filename = mname, width = 12, height = 6)#
}
head(hello[[1]])
head(hello[[2]])
head(hello[[3]])
head(hello[[4]])
countryname = (rownames(UN$U[[Time]]))#
countryname2 = (rownames(UN$U[[Time]]))#
ggplotColours <- function(n = 6, h = c(0, 360) + 15){#
  if ((diff(h) %% 360) < 1) h[2] <- h[2] - 360/n#
  hcl(h = (seq(h[1], h[2], length = n)), c = 100, l = 65)#
}#
countrynames = ggplotColours(4)#
p10 = list()#
n2 = 1#
for (n in 1:N){#
	hellonew[[n]]$SecondDegree = as.numeric(as.character(hellonew[[n]]$SecondDegree))#
	mean[[n]]$SecondDegree = as.numeric(as.character(mean[[n]]$SecondDegree))#
	mean[[n]]$Year = hi#
p10[[n]] = ggplot(hellonew[[n]], aes(x = Year, y = SecondDegree, color= Model, fill =Model)) + geom_boxplot(outlier.size = 0.5, position = position_dodge()) + theme_minimal() +scale_fill_manual(values = alpha(countrynames,0.5), name = countryname[n])+scale_color_manual(values = countrynames,name = countryname[n]) + geom_line(data = mean[[n]], color = "blue", size = 0.2, group = 1)+geom_point(data = mean[[n]], color = "blue", size =2, group = 1)+guides(colour = guide_legend(override.aes = list(shape = NA))) + theme(legend.title = element_blank())#
#
#annotate("text", 30, 10, size = 5, label = countryname2[n], colour = countrynames[n])#
n2 = n2 + 1#
#
mname = paste0(countryname2[n], n, "second.png")#
print(p10[[n]])#
#ggsave(filename = mname, width = 12, height = 6)#
}
years[9]
c(1983:2014)[9]
hellonew[[1]]
c(1983:2014)[9]
hellonew[[1]][which(hellonew[[1]][,2] == 1991),]
countryname = (rownames(UN$U[[Time]]))#
countryname2 = (rownames(UN$U[[Time]]))#
ggplotColours <- function(n = 6, h = c(0, 360) + 15){#
  if ((diff(h) %% 360) < 1) h[2] <- h[2] - 360/n#
  hcl(h = (seq(h[1], h[2], length = n)), c = 100, l = 65)#
}#
countrynames = ggplotColours(4)#
p10 = list()#
n2 = 1#
for (n in 1:N){#
	hellonew[[n]]$SecondDegree = as.numeric(as.character(hellonew[[n]]$SecondDegree))#
	mean[[n]]$SecondDegree = as.numeric(as.character(mean[[n]]$SecondDegree))#
	mean[[n]]$Year = hi#
p10[[n]] = ggplot(hellonew[[n]], aes(x = Year, y = SecondDegree, color= Model, fill =Model)) + geom_boxplot(outlier.size = 0.5, position = position_dodge()) + theme_minimal() +scale_fill_manual(values = alpha(countrynames,0.5), name = countryname[n])+scale_color_manual(values = countrynames,name = countryname[n]) + geom_line(data = mean[[n]], color = "blue", size = 0.2, group = 1)+geom_point(data = mean[[n]], color = "blue", size =2, group = 1)+guides(colour = guide_legend(override.aes = list(shape = NA))) + theme(legend.title = element_blank())#
#
#annotate("text", 30, 10, size = 5, label = countryname2[n], colour = countrynames[n])#
n2 = n2 + 1#
#
mname = paste0(countryname2[n], n, "second.png")#
print(p10[[n]])#
#ggsave(filename = mname, width = 12, height = 6)#
}
names(UN)
head(UN$secondDegree[[9]])
head(UN$secondDegree[[8]])
head(UN$secondDegree[[9]])
head(UN$Degree[[9]])
head(UN$secondDegree[[17]])
which(is.na(Y[d,,1]))
rm(list=ls())
#full#
library(devtools)#
setwd('/Users/bomin8319/Desktop/DAME/pkg/R')#
load_all()#
load("/Users/bomin8319/Desktop/DAME/UNdatafull2.RData")#
attach(UNdatafull)#
library(FastGP)#
library(mvtnorm)#
library(fields)#
library(reshape)#
library(MCMCpack)#
library(expm)#
library(igraph)#
library(DLFM2)#
library(coda)#
library(ggplot2)#
library(gridExtra)#
ggplotColours <- function(n = 6, h = c(0, 360) + 15){#
  if ((diff(h) %% 360) < 1) h[2] <- h[2] - 360/n#
  hcl(h = (seq(h[1], h[2], length = n)), c = 100, l = 65)#
}#
number_ticks <- function(n) {function(limits) pretty(limits, n)}#
#
# 97 country version#
Time = 32#
N = 97#
#
# not existing countries -> all missing values imputed using model (biased)#
avail1 = matrix(1, Time, N)#
colnames(avail1) = colnames(UNdatafull$Y)#
avail1[1:8, which(colnames(avail1) %in% c("ROK", "PRK"))] =0 #North and South Korea did not joined UN voting until 1990#
avail1[1:9, which(colnames(avail1) %in% c("RUS"))] = 0 #RUS X variables not existed until 1991#
avail1[13:21, which(colnames(avail1) %in% c("IRQ"))] = 0 #IRQ under sanction#
#
#avail1[9:14, which(colnames(avail1) %in% c("IRQ"))] = 0 #Under the rule of Saddam, economic data were considered state secrets; thus, reliable data for the era was limited. (From 1990 until Saddam accepted the terms and conditions of UN Resolution 986 in 1996 the GDP in Iraq remained at less than 30 percent of the 1989 value.)#
#
Degrees = vapply(1:Time, function(tp) {rowSums(Y[tp,,], na.rm = TRUE)}, rep(0, N))#
corr = vapply(1:31, function(l) {cor(Degrees[1:(N*(Time - l))], Degrees[(1 + N*l):(N*Time)], use = "complete")}, 0)
sapply(1:32, function(x) sum(Y[x,,] %*% Y[x,,], na.rm = TRUE))
which(is.na(Y[d,,1]))
sapply(1:32, function(d) which(is.na(Y[d,,1])))
load('~/Desktop/UN_full4.RData')#
load('~/Desktop/UN_full.RData')#
load('~/Desktop/UN_full2.RData')#
load('~/Desktop/UN_full3.RData')
head(UN$Degrees[[17]])
head(UN$Degree[[17]])
sapply(1:32, function(d) which(is.na(Y[d,1,])))
head(UN$sdcondDegree[[17]])
head(UN$secondDegree[[17]])
Y[1,,]
head(UN$secondDegree[[9]])
head(UN$thirdDegree[[9]])
library(devtools)
install()
#full#
library(devtools)#
setwd('/Users/bomin8319/Desktop/DAME/pkg/R')#
load_all()#
load("/Users/bomin8319/Desktop/DAME/UNdatafull2.RData")#
attach(UNdatafull)#
library(FastGP)#
library(mvtnorm)#
library(fields)#
library(reshape)#
library(MCMCpack)#
library(expm)#
library(igraph)#
library(DLFM2)#
library(coda)#
library(ggplot2)#
library(gridExtra)#
ggplotColours <- function(n = 6, h = c(0, 360) + 15){#
  if ((diff(h) %% 360) < 1) h[2] <- h[2] - 360/n#
  hcl(h = (seq(h[1], h[2], length = n)), c = 100, l = 65)#
}#
number_ticks <- function(n) {function(limits) pretty(limits, n)}#
#
# 97 country version#
Time = 32#
N = 97#
#
# not existing countries -> all missing values imputed using model (biased)#
avail1 = matrix(1, Time, N)#
colnames(avail1) = colnames(UNdatafull$Y)#
avail1[1:8, which(colnames(avail1) %in% c("ROK", "PRK"))] =0 #North and South Korea did not joined UN voting until 1990#
avail1[1:9, which(colnames(avail1) %in% c("RUS"))] = 0 #RUS X variables not existed until 1991#
avail1[13:21, which(colnames(avail1) %in% c("IRQ"))] = 0 #IRQ under sanction#
#
#avail1[9:14, which(colnames(avail1) %in% c("IRQ"))] = 0 #Under the rule of Saddam, economic data were considered state secrets; thus, reliable data for the era was limited. (From 1990 until Saddam accepted the terms and conditions of UN Resolution 986 in 1996 the GDP in Iraq remained at less than 30 percent of the 1989 value.)#
#
Degrees = vapply(1:Time, function(tp) {rowSums(Y[tp,,], na.rm = TRUE)}, rep(0, N))#
corr = vapply(1:31, function(l) {cor(Degrees[1:(N*(Time - l))], Degrees[(1 + N*l):(N*Time)], use = "complete")}, 0)
UN = DLFM_MH(Y[1:Time,,], X[1:Time,,,1:6], RE = c("additive", "multiplicative"), R = 2, avail = avail1, burn =5000, nscan = 25000, odens = 50)
meaningfull_NA
meaningful_NA
meaningful_NA_rows
meaningful_NA_years
na.positions
na.positions[[21]]
nmeaningful_NA[[21]]
meaningful_NA[[21]]
Q
install()
install()
UN = DLFM_MH(Y[1:Time,,], X[1:Time,,,1:6], RE = c("additive", "multiplicative"), R = 2, avail = avail1, burn =5000, nscan = 25000, odens = 50)
Q
install()
UN = DLFM_MH(Y[1:Time,,], X[1:Time,,,1:6], RE = c("additive", "multiplicative"), R = 2, avail = avail1, burn =5000, nscan = 25000, odens = 50)
UN = DLFM_MH(Y[1:Time,,], X[1:Time,,,1:6], RE = c("additive", "multiplicative"), R = 2, avail = avail1, burn =0, nscan = 25000, odens = 50)
secondDegreestats[[tp]]
rowSums(YPS[[tp]] %*% YPS[[tp]], na.rm = TRUE)
YPS[[tp]]
YPS[[tp]] %*% YPS[[tp]]
avail
na.positions
meaningful_NA_rows
Y[1,,]
Y[8,,]
Y[9,,]
meaningful_NA
na.positions
Y[9,,]
which(is.na(Y[9, , ]))
YPS[[tp]]
meaningful_NA_row
meaningful_NA_rows
YPS[[8]]
Y[1,,]
Q
install()
UN = DLFM_MH(Y[1:Time,,], X[1:Time,,,1:6], RE = c("additive", "multiplicative"), R = 2, avail = avail1, burn =0, nscan = 25000, odens = 50)
install()
UN = DLFM_MH(Y[1:Time,,], X[1:Time,,,1:6], RE = c("additive", "multiplicative"), R = 2, avail = avail1, burn =0, nscan = 25000, odens = 50)
YPS[[tp]]
secondDegreestats[[tp]]
rowSums(YPS[[tp]] %*% YPS[[tp]], na.rm = TRUE)
Q
install()
years
c(1983:2014)
names(X)
dim(X)
X[1,,,1]
X[9,,,1]
X[9,,,1]
X[9,,,2]
X[9,,,3]
X[9,,,4]
X[9,,,5]
X[9,,,6]
X[9,,,7]
c(1983:2014)[9]
