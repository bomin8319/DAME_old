load("/Users/bomin8319/Desktop/UN_full.RData")
Time = 32
N = 97
#construct eigenvector-ized U's
Unew = list()
R = 2
for (tp in 1:32) {
Unew[[tp]] = matrix(NA, nrow = nrow(UN$U[[tp]]), ncol = 2*500)
rownames(UN$U[[tp]])[which(rownames(UN$U[[tp]]) %in% "GFR")] = "GMY"
rownames(Unew[[tp]]) = rownames(UN$U[[tp]])
for (iter in 1:500){
if (sum(is.na(UN$UPS[[tp]][,1]))>0){
Uold = UN$UPS[[tp]][-which(is.na(UN$UPS[[tp]][,1])),(2*iter-1):(2*iter)]
} else {
Uold = UN$UPS[[tp]][,(2*iter-1):(2*iter)]
}
UDU = Uold %*% diag(UN$DPS[[tp]][iter,]) %*% t(Uold)
eULU = eigen(UDU)
Unew[[tp]][, (2*iter-1):(2*iter)] = eULU$vec[, seq(1, R, length = R), drop = FALSE]	}
}
#1. Do a procrustes for the U's (from eigendecomposition of UDU) in each iteration and get their interval. 
#fix USA and JPN's position but not fix those to be same
library(MCMCpack)
Upost1 <- lapply(1:32, function(tp) Unew[[tp]][,1])
Upost2 <- lapply(1:32, function(tp) Unew[[tp]][,2]
)
for (tp in 1:32) {
Xstar = matrix(0, nrow = nrow(UN$U[[tp]]), ncol = 2)
rownames(Xstar) =rownames(UN$U[[tp]])
Xstar = Unew[[tp]][,1:2]
for (iter in 2:500){
Utrans= procrustes(Unew[[tp]][,(2*iter-1):(2*iter)], Xstar)$X.new
Upost1[[tp]] = cbind(Upost1[[tp]], Utrans[,1])
Upost2[[tp]] = cbind(Upost2[[tp]], Utrans[,2])
}
}
yearsummary = list()
for (tp in 1:32) {
yearsummary[[tp]] = cbind(summary(mcmc(t(Upost1[[tp]])))[[2]][,c(1,3, 5)], summary(mcmc(t(Upost2[[tp]])))[[2]][,c(1,3, 5)])
rownames(yearsummary[[tp]]) = rownames(UN$U[[tp]])
}
angle <- function(x,y){
dot.prod <- x%*%y
norm.x <- norm(x,type="2")
norm.y <- norm(y,type="2")
theta <- acos(dot.prod / (norm.x * norm.y))
if (is.na(theta)) theta <- 0
as.numeric(theta)
}
angles = list()
countrypair = list()
for (tp in 1:32) {
N = nrow(Unew[[tp]])
countrypair[[tp]] =  t(combn(rownames(Unew[[tp]]), 2))
angles[[tp]] = matrix(NA, nrow = N * (N-1) / 2, ncol = 500)
for (iter in 1:500){
Unow = Unew[[tp]][,(2*iter-1):(2*iter)]
for (i in 1:nrow(angles[[tp]])) {
angles[[tp]][i, iter] = angle(Unow[which(rownames(Unow) %in% countrypair[[tp]][i,1]),], Unow[which(rownames(Unow) %in% countrypair[[tp]][i,2]),])
}
}
}
save(angles, file = "angles.RData")
library(MCMCpack)
countrypair2 = list()
for (tp in 1:32) {
countrypair2[[tp]] = matrix(NA, nrow = nrow(countrypair[[tp]]), ncol = 4)
for (i in 1:nrow(countrypair[[tp]])) {
summary = summary(mcmc(angles[[tp]][i,]))[[2]][c(1,3, 5)]
countrypair2[[tp]][i, ] =  c(summary, (summary[1] <= 1 & summary[3] >= 1))
}
countrypair[[tp]] = data.frame(countrypair[[tp]], countrypair2[[tp]])
}
similar = list()
for (tp in 1:32){
similar[[tp]] =countrypair[[tp]][which(countrypair[[tp]][,6] == 1), 1:2]
}
similar[[1]]
#full
library(devtools)
setwd('/Users/bomin8319/Desktop/DAME/pkg/R')
load_all()
load("/Users/bomin8319/Desktop/DAME/UNdatafull2.RData")
attach(UNdatafull)
library(FastGP)
library(mvtnorm)
library(fields)
library(reshape)
library(MCMCpack)
library(expm)
library(igraph)
library(DLFM2)
library(coda)
library(ggplot2)
library(gridExtra)
ggplotColours <- function(n = 6, h = c(0, 360) + 15){
if ((diff(h) %% 360) < 1) h[2] <- h[2] - 360/n
hcl(h = (seq(h[1], h[2], length = n)), c = 100, l = 65)
}
number_ticks <- function(n) {function(limits) pretty(limits, n)}
# 97 country version
Time = 32
N = 97
# not existing countries -> all missing values imputed using model (biased)
avail1 = matrix(1, Time, N)
colnames(avail1) = colnames(UNdatafull$Y)
avail1[1:8, which(colnames(avail1) %in% c("ROK", "PRK"))] =0 #North and South Korea did not joined UN voting until 1990
avail1[1:9, which(colnames(avail1) %in% c("RUS"))] = 0 #RUS X variables not existed until 1991
avail1[13:21, which(colnames(avail1) %in% c("IRQ"))] = 0 #IRQ under sanction
#avail1[9:14, which(colnames(avail1) %in% c("IRQ"))] = 0 #Under the rule of Saddam, economic data were considered state secrets; thus, reliable data for the era was limited. (From 1990 until Saddam accepted the terms and conditions of UN Resolution 986 in 1996 the GDP in Iraq remained at less than 30 percent of the 1989 value.)
Degrees = vapply(1:Time, function(tp) {rowSums(Y[tp,,], na.rm = TRUE)}, rep(0, N))
corr = vapply(1:31, function(l) {cor(Degrees[1:(N*(Time - l))], Degrees[(1 + N*l):(N*Time)], use = "complete")}, 0)
dimnames(X)
setwd("/Users/bomin8319/Desktop")
UN = DLFM_MH(Y[1:Time,,], X[1:Time,,,c(1,3,4,5,6)], RE = c("additive", "multiplicative"), R = 2, avail = avail1, burn =5000, nscan = 25000, odens = 50)
names(UN)
plot(UN$s2, type = 'l')
save(UN, file = "UN_nodist.RData")
beta = lapply(1:Time, function(t){summary(mcmc(UN$BETA[[t]][1:500,]))[[2]]})
betas = list()
for (i in 1:6) {betas[[i]] = sapply(1:Time, function(t){beta[[t]][i,]})}
betacols= ggplotColours(6)
plots = list()
i= 1
years = c(1983:2014)
data = data.frame(cbind(years,t(betas[[i]])))
colnames(data)[4] = "beta"
f = ggplot(data, aes(x = years))
plots[[1]]=f + geom_line(aes(y = beta), colour=betacols[1]) + geom_ribbon(aes(ymin = X2.5., ymax = X97.5.), alpha = 0.1) + scale_x_continuous(breaks=number_ticks(8))+ylab("Intercept") + theme_minimal()
color =betacols[-1]
varname = c("log(distance)", "Polity", "Alliance", "Lower trade-to-GDP ratio", "Common Language")
for (i in 2:6){
years = c(1983:2014)
data = data.frame(cbind(years,t(betas[[i]])))
colnames(data)[4] = "beta"
f = ggplot(data, aes(x = years))
plots[[i]] <- f + geom_line(aes(y = beta), colour=color[i-1]) + geom_ribbon(aes(ymin = X2.5., ymax = X97.5.), alpha = 0.1) + ylab(varname[i-1]) + scale_x_continuous(breaks=number_ticks(8)) + geom_hline(yintercept = 0) + theme_minimal()
}
marrangeGrob(plots[1:6], nrow = 2, ncol = 3, top = NULL)
beta = lapply(1:Time, function(t){summary(mcmc(UN$BETA[[t]][1:500,]))[[2]]})
betas = list()
for (i in 1:6) {betas[[i]] = sapply(1:Time, function(t){beta[[t]][i,]})}
betacols= ggplotColours(6)
plots = list()
i= 1
years = c(1983:2014)
data = data.frame(cbind(years,t(betas[[i]])))
colnames(data)[4] = "beta"
f = ggplot(data, aes(x = years))
plots[[1]]=f + geom_line(aes(y = beta), colour=betacols[1]) + geom_ribbon(aes(ymin = X2.5., ymax = X97.5.), alpha = 0.1) + scale_x_continuous(breaks=number_ticks(8))+ylab("Intercept") + theme_minimal()
color =betacols[-1]
varname = c("log(distance)", "Polity", "Alliance", "Lower trade-to-GDP ratio", "Common Language")
for (i in 2:6){
years = c(1983:2014)
data = data.frame(cbind(years,t(betas[[i]])))
colnames(data)[4] = "beta"
f = ggplot(data, aes(x = years))
plots[[i]] <- f + geom_line(aes(y = beta), colour=color[i-1]) + geom_ribbon(aes(ymin = X2.5., ymax = X97.5.), alpha = 0.1) + ylab(varname[i-1]) + scale_x_continuous(breaks=number_ticks(8)) + geom_hline(yintercept = 0) + theme_minimal()
}
marrangeGrob(plots[1:5], nrow = 2, ncol = 3, top = NULL)
Time = 32
N = 97
#construct eigenvector-ized U's
Unew = list()
R = 2
for (tp in 1:32) {
Unew[[tp]] = matrix(NA, nrow = nrow(UN$U[[tp]]), ncol = 2*500)
rownames(UN$U[[tp]])[which(rownames(UN$U[[tp]]) %in% "GFR")] = "GMY"
rownames(Unew[[tp]]) = rownames(UN$U[[tp]])
for (iter in 1:500){
if (sum(is.na(UN$UPS[[tp]][,1]))>0){
Uold = UN$UPS[[tp]][-which(is.na(UN$UPS[[tp]][,1])),(2*iter-1):(2*iter)]
} else {
Uold = UN$UPS[[tp]][,(2*iter-1):(2*iter)]
}
UDU = Uold %*% diag(UN$DPS[[tp]][iter,]) %*% t(Uold)
eULU = eigen(UDU)
Unew[[tp]][, (2*iter-1):(2*iter)] = eULU$vec[, seq(1, R, length = R), drop = FALSE]	}
}
#1. Do a procrustes for the U's (from eigendecomposition of UDU) in each iteration and get their interval. 
#fix USA and JPN's position but not fix those to be same
library(MCMCpack)
Upost1 <- lapply(1:32, function(tp) Unew[[tp]][,1])
Upost2 <- lapply(1:32, function(tp) Unew[[tp]][,2]
)
for (tp in 1:32) {
Xstar = matrix(0, nrow = nrow(UN$U[[tp]]), ncol = 2)
rownames(Xstar) =rownames(UN$U[[tp]])
Xstar = Unew[[tp]][,1:2]
for (iter in 2:500){
Utrans= procrustes(Unew[[tp]][,(2*iter-1):(2*iter)], Xstar)$X.new
Upost1[[tp]] = cbind(Upost1[[tp]], Utrans[,1])
Upost2[[tp]] = cbind(Upost2[[tp]], Utrans[,2])
}
}
yearsummary = list()
for (tp in 1:32) {
yearsummary[[tp]] = cbind(summary(mcmc(t(Upost1[[tp]])))[[2]][,c(1,3, 5)], summary(mcmc(t(Upost2[[tp]])))[[2]][,c(1,3, 5)])
rownames(yearsummary[[tp]]) = rownames(UN$U[[tp]])
}
library(ggplot2)
library(FastGP)
library(mvtnorm)
library(fields)
library(reshape)
library(MCMCpack)
library(expm)
library(igraph)
library(DLFM2)
library(coda)
library(ggplot2)
library(gridExtra)
ggplotColours <- function(n = 6, h = c(0, 360) + 15){
if ((diff(h) %% 360) < 1) h[2] <- h[2] - 360/n
hcl(h = (seq(h[1], h[2], length = n)), c = 100, l = 65)
}
number_ticks <- function(n) {function(limits) pretty(limits, n)}
#UD plots_full
setwd('/Users/bomin8319/Desktop/UDU')
years = c(1983:2014)
colors = sort(rownames(yearsummary[[32]]))
plots= list()
data2 = list()
sums = list()
for (t in 1:Time) {
data2[[t]] = data.frame(Country = c(sapply(rownames(Upost1[[t]]), function(x){rep(x, 500)})), r1 = c(sapply(1:nrow(Upost1[[t]]), function(x){Upost1[[t]][x,]})), r2 = c(sapply(1:nrow(Upost2[[t]]), function(x){Upost2[[t]][x,]})))
colors.t = colors[which(colors %in% rownames(yearsummary[[t]]))]
p <- ggplot(data2[[t]], aes(x = r1, y = r2, colour = Country, label = Country))
sums[[t]] <- data.frame(r1 = yearsummary[[t]][,2], r2 = yearsummary[[t]][,5], Country = rownames(yearsummary[[t]]))
plots[[t]] = p+ stat_ellipse(show.legend = F)+ ggtitle(years[t]) + theme_minimal()+ theme(plot.title = element_text(hjust = 0.5)) + scale_x_continuous(breaks=number_ticks(3)) + scale_y_continuous(breaks=number_ticks(3))+geom_text(data = sums[[t]], size = 3, show.legend = F)
mname = paste0("plot", t, "full.png")
print(plots[[t]])
ggsave(filename = mname)
}
marrangeGrob(plots[c(4,8,12,16,20,24,28,Time)], nrow = 2, ncol = 4, top = NULL)
setwd('/Users/bomin8319/Desktop/UDU')
#UD plots_reduced
data3 = list()
sums2 = list()
for (t in 1:Time) {
data3[[t]] = data2[[t]][data2[[t]]$Country %in% c("USA", "CHN", "IND", "ROK","PRK","IRQ","RUS","GRG","UKR","UKG", "FRN", "GMY", "TUR", "JPN", "ISR", "SYR", "LEB", "SUD", "IRN", "AUL", "PAK", "EGY","AFG"),]
sums2[[t]] =  sums[[t]][sums[[t]]$Country %in% c("USA", "CHN", "IND", "ROK","PRK","IRQ","RUS","GRG","UKR","UKG", "FRN", "GMY", "TUR", "JPN", "ISR", "SYR", "LEB", "SUD", "IRN", "AUL", "PAK", "EGY","AFG"),]
}
colors = sort(rownames(sums2[[32]]))
for (t in 1:Time) {
p <- ggplot(data3[[t]], aes(x = r1, y = r2, colour = Country, label = Country))
plots[[t]] = p+ stat_ellipse(show.legend = F)+ ggtitle(years[t]) + theme_minimal()+ theme(plot.title = element_text(hjust = 0.5)) + scale_x_continuous(breaks=number_ticks(3)) + scale_y_continuous(breaks=number_ticks(3))+geom_text(data = sums2[[t]], size = 3, show.legend = F)
mname = paste0("plot", t, "reduced.png")
print(plots[[t]])
ggsave(filename = mname)
}
data3 = list()
sums2 = list()
for (t in 1:Time) {
data3[[t]] = data2[[t]][data2[[t]]$Country %in% c("USA", "CHN", "IND", "ROK","PRK","IRQ","RUS","GRG","UKR","UKG", "FRN", "GMY", "TUR", "JPN", "ISR", "SYR", "LEB", "SUD", "IRN", "AUL", "PAK", "EGY","AFG"),]
sums2[[t]] =  sums[[t]][sums[[t]]$Country %in% c("USA", "CHN", "IND", "ROK","PRK","IRQ","RUS","GRG","UKR","UKG", "FRN", "GMY", "TUR", "JPN", "ISR", "SYR", "LEB", "SUD", "IRN", "AUL", "PAK", "EGY","AFG"),]
p <- ggplot(data3[[t]], aes(x = r1, y = r2, colour = Country, label = Country))
plots[[t]] = p+ stat_ellipse(show.legend = F)+ ggtitle(years[t]) + theme_minimal()+ theme(plot.title = element_text(hjust = 0.5)) + scale_x_continuous(breaks=number_ticks(3)) + scale_y_continuous(breaks=number_ticks(3))+geom_text(data = sums2[[t]], size = 2, show.legend = F)
mname = paste0("plot", t, "reduced.png")
#print(plots[[t]])
#ggsave(filename = mname)
}
marrangeGrob(plots[c(4,8,12,16,20,24,28,Time)], nrow = 2, ncol = 4, top = NULL)
